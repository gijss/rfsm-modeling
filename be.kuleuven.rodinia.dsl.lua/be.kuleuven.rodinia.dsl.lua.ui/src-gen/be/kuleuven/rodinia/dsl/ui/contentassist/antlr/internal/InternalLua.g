/*
* generated by Xtext
*/
grammar InternalLua;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package be.kuleuven.rodinia.dsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package be.kuleuven.rodinia.dsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import be.kuleuven.rodinia.dsl.services.LuaGrammarAccess;

}

@parser::members {
 
 	private LuaGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(LuaGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleChunk
entryRuleChunk 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_COMMENT");
}
:
{ before(grammarAccess.getChunkRule()); }
	 ruleChunk
{ after(grammarAccess.getChunkRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Chunk
ruleChunk
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChunkAccess().getBlockParserRuleCall()); }
	ruleBlock
{ after(grammarAccess.getChunkAccess().getBlockParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleBlock
entryRuleBlock 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_COMMENT");
}
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Block
ruleBlock
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockAccess().getGroup()); }
(rule__Block__Group__0)
{ after(grammarAccess.getBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleLastStatement
entryRuleLastStatement 
:
{ before(grammarAccess.getLastStatementRule()); }
	 ruleLastStatement
{ after(grammarAccess.getLastStatementRule()); } 
	 EOF 
;

// Rule LastStatement
ruleLastStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLastStatementAccess().getAlternatives()); }
(rule__LastStatement__Alternatives)
{ after(grammarAccess.getLastStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLastStatement_Return
entryRuleLastStatement_Return 
:
{ before(grammarAccess.getLastStatement_ReturnRule()); }
	 ruleLastStatement_Return
{ after(grammarAccess.getLastStatement_ReturnRule()); } 
	 EOF 
;

// Rule LastStatement_Return
ruleLastStatement_Return
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLastStatement_ReturnAccess().getGroup()); }
(rule__LastStatement_Return__Group__0)
{ after(grammarAccess.getLastStatement_ReturnAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLastStatement_Break
entryRuleLastStatement_Break 
:
{ before(grammarAccess.getLastStatement_BreakRule()); }
	 ruleLastStatement_Break
{ after(grammarAccess.getLastStatement_BreakRule()); } 
	 EOF 
;

// Rule LastStatement_Break
ruleLastStatement_Break
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLastStatement_BreakAccess().getGroup()); }
(rule__LastStatement_Break__Group__0)
{ after(grammarAccess.getLastStatement_BreakAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_COMMENT");
}
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Statement
ruleStatement
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleStatement_Block
entryRuleStatement_Block 
:
{ before(grammarAccess.getStatement_BlockRule()); }
	 ruleStatement_Block
{ after(grammarAccess.getStatement_BlockRule()); } 
	 EOF 
;

// Rule Statement_Block
ruleStatement_Block
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatement_BlockAccess().getGroup()); }
(rule__Statement_Block__Group__0)
{ after(grammarAccess.getStatement_BlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement_While
entryRuleStatement_While 
:
{ before(grammarAccess.getStatement_WhileRule()); }
	 ruleStatement_While
{ after(grammarAccess.getStatement_WhileRule()); } 
	 EOF 
;

// Rule Statement_While
ruleStatement_While
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatement_WhileAccess().getGroup()); }
(rule__Statement_While__Group__0)
{ after(grammarAccess.getStatement_WhileAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement_Repeat
entryRuleStatement_Repeat 
:
{ before(grammarAccess.getStatement_RepeatRule()); }
	 ruleStatement_Repeat
{ after(grammarAccess.getStatement_RepeatRule()); } 
	 EOF 
;

// Rule Statement_Repeat
ruleStatement_Repeat
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatement_RepeatAccess().getGroup()); }
(rule__Statement_Repeat__Group__0)
{ after(grammarAccess.getStatement_RepeatAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement_If_Then_Else
entryRuleStatement_If_Then_Else 
:
{ before(grammarAccess.getStatement_If_Then_ElseRule()); }
	 ruleStatement_If_Then_Else
{ after(grammarAccess.getStatement_If_Then_ElseRule()); } 
	 EOF 
;

// Rule Statement_If_Then_Else
ruleStatement_If_Then_Else
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatement_If_Then_ElseAccess().getGroup()); }
(rule__Statement_If_Then_Else__Group__0)
{ after(grammarAccess.getStatement_If_Then_ElseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement_If_Then_Else_ElseIfPart
entryRuleStatement_If_Then_Else_ElseIfPart 
:
{ before(grammarAccess.getStatement_If_Then_Else_ElseIfPartRule()); }
	 ruleStatement_If_Then_Else_ElseIfPart
{ after(grammarAccess.getStatement_If_Then_Else_ElseIfPartRule()); } 
	 EOF 
;

// Rule Statement_If_Then_Else_ElseIfPart
ruleStatement_If_Then_Else_ElseIfPart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatement_If_Then_Else_ElseIfPartAccess().getGroup()); }
(rule__Statement_If_Then_Else_ElseIfPart__Group__0)
{ after(grammarAccess.getStatement_If_Then_Else_ElseIfPartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement_For_Numeric
entryRuleStatement_For_Numeric 
:
{ before(grammarAccess.getStatement_For_NumericRule()); }
	 ruleStatement_For_Numeric
{ after(grammarAccess.getStatement_For_NumericRule()); } 
	 EOF 
;

// Rule Statement_For_Numeric
ruleStatement_For_Numeric
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatement_For_NumericAccess().getGroup()); }
(rule__Statement_For_Numeric__Group__0)
{ after(grammarAccess.getStatement_For_NumericAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement_For_Generic
entryRuleStatement_For_Generic 
:
{ before(grammarAccess.getStatement_For_GenericRule()); }
	 ruleStatement_For_Generic
{ after(grammarAccess.getStatement_For_GenericRule()); } 
	 EOF 
;

// Rule Statement_For_Generic
ruleStatement_For_Generic
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatement_For_GenericAccess().getGroup()); }
(rule__Statement_For_Generic__Group__0)
{ after(grammarAccess.getStatement_For_GenericAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement_GlobalFunction_Declaration
entryRuleStatement_GlobalFunction_Declaration 
:
{ before(grammarAccess.getStatement_GlobalFunction_DeclarationRule()); }
	 ruleStatement_GlobalFunction_Declaration
{ after(grammarAccess.getStatement_GlobalFunction_DeclarationRule()); } 
	 EOF 
;

// Rule Statement_GlobalFunction_Declaration
ruleStatement_GlobalFunction_Declaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getGroup()); }
(rule__Statement_GlobalFunction_Declaration__Group__0)
{ after(grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement_LocalFunction_Declaration
entryRuleStatement_LocalFunction_Declaration 
:
{ before(grammarAccess.getStatement_LocalFunction_DeclarationRule()); }
	 ruleStatement_LocalFunction_Declaration
{ after(grammarAccess.getStatement_LocalFunction_DeclarationRule()); } 
	 EOF 
;

// Rule Statement_LocalFunction_Declaration
ruleStatement_LocalFunction_Declaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatement_LocalFunction_DeclarationAccess().getGroup()); }
(rule__Statement_LocalFunction_Declaration__Group__0)
{ after(grammarAccess.getStatement_LocalFunction_DeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement_Local_Variable_Declaration
entryRuleStatement_Local_Variable_Declaration 
:
{ before(grammarAccess.getStatement_Local_Variable_DeclarationRule()); }
	 ruleStatement_Local_Variable_Declaration
{ after(grammarAccess.getStatement_Local_Variable_DeclarationRule()); } 
	 EOF 
;

// Rule Statement_Local_Variable_Declaration
ruleStatement_Local_Variable_Declaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatement_Local_Variable_DeclarationAccess().getGroup()); }
(rule__Statement_Local_Variable_Declaration__Group__0)
{ after(grammarAccess.getStatement_Local_Variable_DeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement_FunctioncallOrAssignment
entryRuleStatement_FunctioncallOrAssignment 
:
{ before(grammarAccess.getStatement_FunctioncallOrAssignmentRule()); }
	 ruleStatement_FunctioncallOrAssignment
{ after(grammarAccess.getStatement_FunctioncallOrAssignmentRule()); } 
	 EOF 
;

// Rule Statement_FunctioncallOrAssignment
ruleStatement_FunctioncallOrAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getGroup()); }
(rule__Statement_FunctioncallOrAssignment__Group__0)
{ after(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_COMMENT");
}
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Expression
ruleExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getExpression_OrParserRuleCall()); }
	ruleExpression_Or
{ after(grammarAccess.getExpressionAccess().getExpression_OrParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleExpression_Or
entryRuleExpression_Or 
:
{ before(grammarAccess.getExpression_OrRule()); }
	 ruleExpression_Or
{ after(grammarAccess.getExpression_OrRule()); } 
	 EOF 
;

// Rule Expression_Or
ruleExpression_Or
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_OrAccess().getGroup()); }
(rule__Expression_Or__Group__0)
{ after(grammarAccess.getExpression_OrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression_And
entryRuleExpression_And 
:
{ before(grammarAccess.getExpression_AndRule()); }
	 ruleExpression_And
{ after(grammarAccess.getExpression_AndRule()); } 
	 EOF 
;

// Rule Expression_And
ruleExpression_And
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_AndAccess().getGroup()); }
(rule__Expression_And__Group__0)
{ after(grammarAccess.getExpression_AndAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression_Compare
entryRuleExpression_Compare 
:
{ before(grammarAccess.getExpression_CompareRule()); }
	 ruleExpression_Compare
{ after(grammarAccess.getExpression_CompareRule()); } 
	 EOF 
;

// Rule Expression_Compare
ruleExpression_Compare
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_CompareAccess().getGroup()); }
(rule__Expression_Compare__Group__0)
{ after(grammarAccess.getExpression_CompareAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression_Concatenation
entryRuleExpression_Concatenation 
:
{ before(grammarAccess.getExpression_ConcatenationRule()); }
	 ruleExpression_Concatenation
{ after(grammarAccess.getExpression_ConcatenationRule()); } 
	 EOF 
;

// Rule Expression_Concatenation
ruleExpression_Concatenation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_ConcatenationAccess().getGroup()); }
(rule__Expression_Concatenation__Group__0)
{ after(grammarAccess.getExpression_ConcatenationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression_PlusMinus
entryRuleExpression_PlusMinus 
:
{ before(grammarAccess.getExpression_PlusMinusRule()); }
	 ruleExpression_PlusMinus
{ after(grammarAccess.getExpression_PlusMinusRule()); } 
	 EOF 
;

// Rule Expression_PlusMinus
ruleExpression_PlusMinus
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_PlusMinusAccess().getGroup()); }
(rule__Expression_PlusMinus__Group__0)
{ after(grammarAccess.getExpression_PlusMinusAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression_MultiplicationDivisionModulo
entryRuleExpression_MultiplicationDivisionModulo 
:
{ before(grammarAccess.getExpression_MultiplicationDivisionModuloRule()); }
	 ruleExpression_MultiplicationDivisionModulo
{ after(grammarAccess.getExpression_MultiplicationDivisionModuloRule()); } 
	 EOF 
;

// Rule Expression_MultiplicationDivisionModulo
ruleExpression_MultiplicationDivisionModulo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getGroup()); }
(rule__Expression_MultiplicationDivisionModulo__Group__0)
{ after(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression_Unary
entryRuleExpression_Unary 
:
{ before(grammarAccess.getExpression_UnaryRule()); }
	 ruleExpression_Unary
{ after(grammarAccess.getExpression_UnaryRule()); } 
	 EOF 
;

// Rule Expression_Unary
ruleExpression_Unary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_UnaryAccess().getAlternatives()); }
(rule__Expression_Unary__Alternatives)
{ after(grammarAccess.getExpression_UnaryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression_Exponentiation
entryRuleExpression_Exponentiation 
:
{ before(grammarAccess.getExpression_ExponentiationRule()); }
	 ruleExpression_Exponentiation
{ after(grammarAccess.getExpression_ExponentiationRule()); } 
	 EOF 
;

// Rule Expression_Exponentiation
ruleExpression_Exponentiation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_ExponentiationAccess().getGroup()); }
(rule__Expression_Exponentiation__Group__0)
{ after(grammarAccess.getExpression_ExponentiationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression_Terminal
entryRuleExpression_Terminal 
:
{ before(grammarAccess.getExpression_TerminalRule()); }
	 ruleExpression_Terminal
{ after(grammarAccess.getExpression_TerminalRule()); } 
	 EOF 
;

// Rule Expression_Terminal
ruleExpression_Terminal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_TerminalAccess().getAlternatives()); }
(rule__Expression_Terminal__Alternatives)
{ after(grammarAccess.getExpression_TerminalAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression_Nil
entryRuleExpression_Nil 
:
{ before(grammarAccess.getExpression_NilRule()); }
	 ruleExpression_Nil
{ after(grammarAccess.getExpression_NilRule()); } 
	 EOF 
;

// Rule Expression_Nil
ruleExpression_Nil
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_NilAccess().getGroup()); }
(rule__Expression_Nil__Group__0)
{ after(grammarAccess.getExpression_NilAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression_True
entryRuleExpression_True 
:
{ before(grammarAccess.getExpression_TrueRule()); }
	 ruleExpression_True
{ after(grammarAccess.getExpression_TrueRule()); } 
	 EOF 
;

// Rule Expression_True
ruleExpression_True
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_TrueAccess().getGroup()); }
(rule__Expression_True__Group__0)
{ after(grammarAccess.getExpression_TrueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression_False
entryRuleExpression_False 
:
{ before(grammarAccess.getExpression_FalseRule()); }
	 ruleExpression_False
{ after(grammarAccess.getExpression_FalseRule()); } 
	 EOF 
;

// Rule Expression_False
ruleExpression_False
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_FalseAccess().getGroup()); }
(rule__Expression_False__Group__0)
{ after(grammarAccess.getExpression_FalseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression_Number
entryRuleExpression_Number 
:
{ before(grammarAccess.getExpression_NumberRule()); }
	 ruleExpression_Number
{ after(grammarAccess.getExpression_NumberRule()); } 
	 EOF 
;

// Rule Expression_Number
ruleExpression_Number
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_NumberAccess().getValueAssignment()); }
(rule__Expression_Number__ValueAssignment)
{ after(grammarAccess.getExpression_NumberAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression_VarArgs
entryRuleExpression_VarArgs 
:
{ before(grammarAccess.getExpression_VarArgsRule()); }
	 ruleExpression_VarArgs
{ after(grammarAccess.getExpression_VarArgsRule()); } 
	 EOF 
;

// Rule Expression_VarArgs
ruleExpression_VarArgs
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_VarArgsAccess().getGroup()); }
(rule__Expression_VarArgs__Group__0)
{ after(grammarAccess.getExpression_VarArgsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression_String
entryRuleExpression_String 
:
{ before(grammarAccess.getExpression_StringRule()); }
	 ruleExpression_String
{ after(grammarAccess.getExpression_StringRule()); } 
	 EOF 
;

// Rule Expression_String
ruleExpression_String
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_StringAccess().getValueAssignment()); }
(rule__Expression_String__ValueAssignment)
{ after(grammarAccess.getExpression_StringAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression_Function
entryRuleExpression_Function 
:
{ before(grammarAccess.getExpression_FunctionRule()); }
	 ruleExpression_Function
{ after(grammarAccess.getExpression_FunctionRule()); } 
	 EOF 
;

// Rule Expression_Function
ruleExpression_Function
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_FunctionAccess().getGroup()); }
(rule__Expression_Function__Group__0)
{ after(grammarAccess.getExpression_FunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression_TableConstructor
entryRuleExpression_TableConstructor 
:
{ before(grammarAccess.getExpression_TableConstructorRule()); }
	 ruleExpression_TableConstructor
{ after(grammarAccess.getExpression_TableConstructorRule()); } 
	 EOF 
;

// Rule Expression_TableConstructor
ruleExpression_TableConstructor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_TableConstructorAccess().getGroup()); }
(rule__Expression_TableConstructor__Group__0)
{ after(grammarAccess.getExpression_TableConstructorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression_Functioncall
entryRuleExpression_Functioncall 
:
{ before(grammarAccess.getExpression_FunctioncallRule()); }
	 ruleExpression_Functioncall
{ after(grammarAccess.getExpression_FunctioncallRule()); } 
	 EOF 
;

// Rule Expression_Functioncall
ruleExpression_Functioncall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_FunctioncallAccess().getGroup()); }
(rule__Expression_Functioncall__Group__0)
{ after(grammarAccess.getExpression_FunctioncallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression_AccessMemberOrArrayElement
entryRuleExpression_AccessMemberOrArrayElement 
:
{ before(grammarAccess.getExpression_AccessMemberOrArrayElementRule()); }
	 ruleExpression_AccessMemberOrArrayElement
{ after(grammarAccess.getExpression_AccessMemberOrArrayElementRule()); } 
	 EOF 
;

// Rule Expression_AccessMemberOrArrayElement
ruleExpression_AccessMemberOrArrayElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getGroup()); }
(rule__Expression_AccessMemberOrArrayElement__Group__0)
{ after(grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression_VariableName
entryRuleExpression_VariableName 
:
{ before(grammarAccess.getExpression_VariableNameRule()); }
	 ruleExpression_VariableName
{ after(grammarAccess.getExpression_VariableNameRule()); } 
	 EOF 
;

// Rule Expression_VariableName
ruleExpression_VariableName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_VariableNameAccess().getAlternatives()); }
(rule__Expression_VariableName__Alternatives)
{ after(grammarAccess.getExpression_VariableNameAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunction
entryRuleFunction 
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionAccess().getGroup()); }
(rule__Function__Group__0)
{ after(grammarAccess.getFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctioncall_Arguments
entryRuleFunctioncall_Arguments 
:
{ before(grammarAccess.getFunctioncall_ArgumentsRule()); }
	 ruleFunctioncall_Arguments
{ after(grammarAccess.getFunctioncall_ArgumentsRule()); } 
	 EOF 
;

// Rule Functioncall_Arguments
ruleFunctioncall_Arguments
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctioncall_ArgumentsAccess().getGroup()); }
(rule__Functioncall_Arguments__Group__0)
{ after(grammarAccess.getFunctioncall_ArgumentsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleField
entryRuleField 
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldAccess().getAlternatives()); }
(rule__Field__Alternatives)
{ after(grammarAccess.getFieldAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleField_AddEntryToTable_Brackets
entryRuleField_AddEntryToTable_Brackets 
:
{ before(grammarAccess.getField_AddEntryToTable_BracketsRule()); }
	 ruleField_AddEntryToTable_Brackets
{ after(grammarAccess.getField_AddEntryToTable_BracketsRule()); } 
	 EOF 
;

// Rule Field_AddEntryToTable_Brackets
ruleField_AddEntryToTable_Brackets
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getField_AddEntryToTable_BracketsAccess().getGroup()); }
(rule__Field_AddEntryToTable_Brackets__Group__0)
{ after(grammarAccess.getField_AddEntryToTable_BracketsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleField_AddEntryToTable
entryRuleField_AddEntryToTable 
:
{ before(grammarAccess.getField_AddEntryToTableRule()); }
	 ruleField_AddEntryToTable
{ after(grammarAccess.getField_AddEntryToTableRule()); } 
	 EOF 
;

// Rule Field_AddEntryToTable
ruleField_AddEntryToTable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getField_AddEntryToTableAccess().getGroup()); }
(rule__Field_AddEntryToTable__Group__0)
{ after(grammarAccess.getField_AddEntryToTableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleField_AppendEntryToTable
entryRuleField_AppendEntryToTable 
:
{ before(grammarAccess.getField_AppendEntryToTableRule()); }
	 ruleField_AppendEntryToTable
{ after(grammarAccess.getField_AppendEntryToTableRule()); } 
	 EOF 
;

// Rule Field_AppendEntryToTable
ruleField_AppendEntryToTable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getField_AppendEntryToTableAccess().getValueAssignment()); }
(rule__Field_AppendEntryToTable__ValueAssignment)
{ after(grammarAccess.getField_AppendEntryToTableAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__LastStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLastStatementAccess().getLastStatement_ReturnParserRuleCall_0()); }
	ruleLastStatement_Return
{ after(grammarAccess.getLastStatementAccess().getLastStatement_ReturnParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLastStatementAccess().getLastStatement_BreakParserRuleCall_1()); }
	ruleLastStatement_Break
{ after(grammarAccess.getLastStatementAccess().getLastStatement_BreakParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatement_BlockParserRuleCall_0()); }
	ruleStatement_Block
{ after(grammarAccess.getStatementAccess().getStatement_BlockParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getStatement_WhileParserRuleCall_1()); }
	ruleStatement_While
{ after(grammarAccess.getStatementAccess().getStatement_WhileParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getStatement_RepeatParserRuleCall_2()); }
	ruleStatement_Repeat
{ after(grammarAccess.getStatementAccess().getStatement_RepeatParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getStatement_If_Then_ElseParserRuleCall_3()); }
	ruleStatement_If_Then_Else
{ after(grammarAccess.getStatementAccess().getStatement_If_Then_ElseParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getStatement_For_NumericParserRuleCall_4()); }
	ruleStatement_For_Numeric
{ after(grammarAccess.getStatementAccess().getStatement_For_NumericParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getStatement_For_GenericParserRuleCall_5()); }
	ruleStatement_For_Generic
{ after(grammarAccess.getStatementAccess().getStatement_For_GenericParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getStatement_GlobalFunction_DeclarationParserRuleCall_6()); }
	ruleStatement_GlobalFunction_Declaration
{ after(grammarAccess.getStatementAccess().getStatement_GlobalFunction_DeclarationParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getStatement_LocalFunction_DeclarationParserRuleCall_7()); }
	ruleStatement_LocalFunction_Declaration
{ after(grammarAccess.getStatementAccess().getStatement_LocalFunction_DeclarationParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getStatement_Local_Variable_DeclarationParserRuleCall_8()); }
	ruleStatement_Local_Variable_Declaration
{ after(grammarAccess.getStatementAccess().getStatement_Local_Variable_DeclarationParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getStatement_FunctioncallOrAssignmentParserRuleCall_9()); }
	ruleStatement_FunctioncallOrAssignment
{ after(grammarAccess.getStatementAccess().getStatement_FunctioncallOrAssignmentParserRuleCall_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_FunctioncallOrAssignment__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getGroup_1_0()); }
(rule__Statement_FunctioncallOrAssignment__Group_1_0__0)
{ after(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getGroup_1_1()); }
(rule__Statement_FunctioncallOrAssignment__Group_1_1__0)
{ after(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getGroup_1_1()); }
)

    |(
{ before(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getGroup_1_2()); }
(rule__Statement_FunctioncallOrAssignment__Group_1_2__0)
{ after(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Compare__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_CompareAccess().getGroup_1_0()); }
(rule__Expression_Compare__Group_1_0__0)
{ after(grammarAccess.getExpression_CompareAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getExpression_CompareAccess().getGroup_1_1()); }
(rule__Expression_Compare__Group_1_1__0)
{ after(grammarAccess.getExpression_CompareAccess().getGroup_1_1()); }
)

    |(
{ before(grammarAccess.getExpression_CompareAccess().getGroup_1_2()); }
(rule__Expression_Compare__Group_1_2__0)
{ after(grammarAccess.getExpression_CompareAccess().getGroup_1_2()); }
)

    |(
{ before(grammarAccess.getExpression_CompareAccess().getGroup_1_3()); }
(rule__Expression_Compare__Group_1_3__0)
{ after(grammarAccess.getExpression_CompareAccess().getGroup_1_3()); }
)

    |(
{ before(grammarAccess.getExpression_CompareAccess().getGroup_1_4()); }
(rule__Expression_Compare__Group_1_4__0)
{ after(grammarAccess.getExpression_CompareAccess().getGroup_1_4()); }
)

    |(
{ before(grammarAccess.getExpression_CompareAccess().getGroup_1_5()); }
(rule__Expression_Compare__Group_1_5__0)
{ after(grammarAccess.getExpression_CompareAccess().getGroup_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_PlusMinus__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_PlusMinusAccess().getGroup_1_0()); }
(rule__Expression_PlusMinus__Group_1_0__0)
{ after(grammarAccess.getExpression_PlusMinusAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getExpression_PlusMinusAccess().getGroup_1_1()); }
(rule__Expression_PlusMinus__Group_1_1__0)
{ after(grammarAccess.getExpression_PlusMinusAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_MultiplicationDivisionModulo__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getGroup_1_0()); }
(rule__Expression_MultiplicationDivisionModulo__Group_1_0__0)
{ after(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getGroup_1_1()); }
(rule__Expression_MultiplicationDivisionModulo__Group_1_1__0)
{ after(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getGroup_1_1()); }
)

    |(
{ before(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getGroup_1_2()); }
(rule__Expression_MultiplicationDivisionModulo__Group_1_2__0)
{ after(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Unary__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_UnaryAccess().getExpression_ExponentiationParserRuleCall_0()); }
	ruleExpression_Exponentiation
{ after(grammarAccess.getExpression_UnaryAccess().getExpression_ExponentiationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExpression_UnaryAccess().getGroup_1()); }
(rule__Expression_Unary__Group_1__0)
{ after(grammarAccess.getExpression_UnaryAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getExpression_UnaryAccess().getGroup_2()); }
(rule__Expression_Unary__Group_2__0)
{ after(grammarAccess.getExpression_UnaryAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getExpression_UnaryAccess().getGroup_3()); }
(rule__Expression_Unary__Group_3__0)
{ after(grammarAccess.getExpression_UnaryAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Terminal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_TerminalAccess().getExpression_NilParserRuleCall_0()); }
	ruleExpression_Nil
{ after(grammarAccess.getExpression_TerminalAccess().getExpression_NilParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExpression_TerminalAccess().getExpression_TrueParserRuleCall_1()); }
	ruleExpression_True
{ after(grammarAccess.getExpression_TerminalAccess().getExpression_TrueParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getExpression_TerminalAccess().getExpression_FalseParserRuleCall_2()); }
	ruleExpression_False
{ after(grammarAccess.getExpression_TerminalAccess().getExpression_FalseParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getExpression_TerminalAccess().getExpression_NumberParserRuleCall_3()); }
	ruleExpression_Number
{ after(grammarAccess.getExpression_TerminalAccess().getExpression_NumberParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getExpression_TerminalAccess().getExpression_VarArgsParserRuleCall_4()); }
	ruleExpression_VarArgs
{ after(grammarAccess.getExpression_TerminalAccess().getExpression_VarArgsParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getExpression_TerminalAccess().getExpression_StringParserRuleCall_5()); }
	ruleExpression_String
{ after(grammarAccess.getExpression_TerminalAccess().getExpression_StringParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getExpression_TerminalAccess().getExpression_FunctionParserRuleCall_6()); }
	ruleExpression_Function
{ after(grammarAccess.getExpression_TerminalAccess().getExpression_FunctionParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getExpression_TerminalAccess().getExpression_TableConstructorParserRuleCall_7()); }
	ruleExpression_TableConstructor
{ after(grammarAccess.getExpression_TerminalAccess().getExpression_TableConstructorParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getExpression_TerminalAccess().getExpression_FunctioncallParserRuleCall_8()); }
	ruleExpression_Functioncall
{ after(grammarAccess.getExpression_TerminalAccess().getExpression_FunctioncallParserRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_TableConstructor__Alternatives_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_TableConstructorAccess().getCommaKeyword_2_1_0_0()); }

	',' 

{ after(grammarAccess.getExpression_TableConstructorAccess().getCommaKeyword_2_1_0_0()); }
)

    |(
{ before(grammarAccess.getExpression_TableConstructorAccess().getSemicolonKeyword_2_1_0_1()); }

	';' 

{ after(grammarAccess.getExpression_TableConstructorAccess().getSemicolonKeyword_2_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_TableConstructor__Alternatives_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_TableConstructorAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getExpression_TableConstructorAccess().getCommaKeyword_2_2_0()); }
)

    |(
{ before(grammarAccess.getExpression_TableConstructorAccess().getSemicolonKeyword_2_2_1()); }

	';' 

{ after(grammarAccess.getExpression_TableConstructorAccess().getSemicolonKeyword_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Functioncall__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_FunctioncallAccess().getGroup_1_0()); }
(rule__Expression_Functioncall__Group_1_0__0)
{ after(grammarAccess.getExpression_FunctioncallAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getExpression_FunctioncallAccess().getGroup_1_1()); }
(rule__Expression_Functioncall__Group_1_1__0)
{ after(grammarAccess.getExpression_FunctioncallAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_AccessMemberOrArrayElement__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getGroup_1_0()); }
(rule__Expression_AccessMemberOrArrayElement__Group_1_0__0)
{ after(grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getGroup_1_1()); }
(rule__Expression_AccessMemberOrArrayElement__Group_1_1__0)
{ after(grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_VariableName__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_VariableNameAccess().getGroup_0()); }
(rule__Expression_VariableName__Group_0__0)
{ after(grammarAccess.getExpression_VariableNameAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getExpression_VariableNameAccess().getGroup_1()); }
(rule__Expression_VariableName__Group_1__0)
{ after(grammarAccess.getExpression_VariableNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Functioncall_Arguments__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctioncall_ArgumentsAccess().getGroup_1_0()); }
(rule__Functioncall_Arguments__Group_1_0__0)
{ after(grammarAccess.getFunctioncall_ArgumentsAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getFunctioncall_ArgumentsAccess().getArgumentsAssignment_1_1()); }
(rule__Functioncall_Arguments__ArgumentsAssignment_1_1)
{ after(grammarAccess.getFunctioncall_ArgumentsAccess().getArgumentsAssignment_1_1()); }
)

    |(
{ before(grammarAccess.getFunctioncall_ArgumentsAccess().getArgumentsAssignment_1_2()); }
(rule__Functioncall_Arguments__ArgumentsAssignment_1_2)
{ after(grammarAccess.getFunctioncall_ArgumentsAccess().getArgumentsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getField_AddEntryToTable_BracketsParserRuleCall_0()); }
	ruleField_AddEntryToTable_Brackets
{ after(grammarAccess.getFieldAccess().getField_AddEntryToTable_BracketsParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFieldAccess().getField_AddEntryToTableParserRuleCall_1()); }
	ruleField_AddEntryToTable
{ after(grammarAccess.getFieldAccess().getField_AddEntryToTableParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getFieldAccess().getField_AppendEntryToTableParserRuleCall_2()); }
	ruleField_AppendEntryToTable
{ after(grammarAccess.getFieldAccess().getField_AppendEntryToTableParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Block__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getBlockAction_0()); }
(

)
{ after(grammarAccess.getBlockAccess().getBlockAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__1__Impl
	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getGroup_1()); }
(rule__Block__Group_1__0)*
{ after(grammarAccess.getBlockAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getGroup_2()); }
(rule__Block__Group_2__0)?
{ after(grammarAccess.getBlockAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Block__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group_1__0__Impl
	rule__Block__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatementsAssignment_1_0()); }
(rule__Block__StatementsAssignment_1_0)
{ after(grammarAccess.getBlockAccess().getStatementsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getSemicolonKeyword_1_1()); }
(
	';' 
)?
{ after(grammarAccess.getBlockAccess().getSemicolonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Block__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group_2__0__Impl
	rule__Block__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getReturnValueAssignment_2_0()); }
(rule__Block__ReturnValueAssignment_2_0)
{ after(grammarAccess.getBlockAccess().getReturnValueAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getSemicolonKeyword_2_1()); }
(
	';' 
)?
{ after(grammarAccess.getBlockAccess().getSemicolonKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LastStatement_Return__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LastStatement_Return__Group__0__Impl
	rule__LastStatement_Return__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LastStatement_Return__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLastStatement_ReturnAccess().getReturnKeyword_0()); }

	'return' 

{ after(grammarAccess.getLastStatement_ReturnAccess().getReturnKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LastStatement_Return__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LastStatement_Return__Group__1__Impl
	rule__LastStatement_Return__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LastStatement_Return__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLastStatement_ReturnAccess().getLastStatement_ReturnWithValueAction_1()); }
(

)
{ after(grammarAccess.getLastStatement_ReturnAccess().getLastStatement_ReturnWithValueAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LastStatement_Return__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LastStatement_Return__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LastStatement_Return__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLastStatement_ReturnAccess().getGroup_2()); }
(rule__LastStatement_Return__Group_2__0)?
{ after(grammarAccess.getLastStatement_ReturnAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LastStatement_Return__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LastStatement_Return__Group_2__0__Impl
	rule__LastStatement_Return__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LastStatement_Return__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLastStatement_ReturnAccess().getReturnValuesAssignment_2_0()); }
(rule__LastStatement_Return__ReturnValuesAssignment_2_0)
{ after(grammarAccess.getLastStatement_ReturnAccess().getReturnValuesAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LastStatement_Return__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LastStatement_Return__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LastStatement_Return__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLastStatement_ReturnAccess().getGroup_2_1()); }
(rule__LastStatement_Return__Group_2_1__0)*
{ after(grammarAccess.getLastStatement_ReturnAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LastStatement_Return__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LastStatement_Return__Group_2_1__0__Impl
	rule__LastStatement_Return__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LastStatement_Return__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLastStatement_ReturnAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getLastStatement_ReturnAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LastStatement_Return__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LastStatement_Return__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LastStatement_Return__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLastStatement_ReturnAccess().getReturnValuesAssignment_2_1_1()); }
(rule__LastStatement_Return__ReturnValuesAssignment_2_1_1)
{ after(grammarAccess.getLastStatement_ReturnAccess().getReturnValuesAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LastStatement_Break__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LastStatement_Break__Group__0__Impl
	rule__LastStatement_Break__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LastStatement_Break__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLastStatement_BreakAccess().getBreakKeyword_0()); }

	'break' 

{ after(grammarAccess.getLastStatement_BreakAccess().getBreakKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LastStatement_Break__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LastStatement_Break__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LastStatement_Break__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLastStatement_BreakAccess().getLastStatement_BreakAction_1()); }
(

)
{ after(grammarAccess.getLastStatement_BreakAccess().getLastStatement_BreakAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement_Block__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_Block__Group__0__Impl
	rule__Statement_Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_Block__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_BlockAccess().getDoKeyword_0()); }

	'do' 

{ after(grammarAccess.getStatement_BlockAccess().getDoKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_Block__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_Block__Group__1__Impl
	rule__Statement_Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_Block__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_BlockAccess().getBlockAssignment_1()); }
(rule__Statement_Block__BlockAssignment_1)
{ after(grammarAccess.getStatement_BlockAccess().getBlockAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_Block__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_Block__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_Block__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_BlockAccess().getEndKeyword_2()); }

	'end' 

{ after(grammarAccess.getStatement_BlockAccess().getEndKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Statement_While__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_While__Group__0__Impl
	rule__Statement_While__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_While__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_WhileAccess().getWhileKeyword_0()); }

	'while' 

{ after(grammarAccess.getStatement_WhileAccess().getWhileKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_While__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_While__Group__1__Impl
	rule__Statement_While__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_While__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_WhileAccess().getExpressionAssignment_1()); }
(rule__Statement_While__ExpressionAssignment_1)
{ after(grammarAccess.getStatement_WhileAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_While__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_While__Group__2__Impl
	rule__Statement_While__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_While__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_WhileAccess().getDoKeyword_2()); }

	'do' 

{ after(grammarAccess.getStatement_WhileAccess().getDoKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_While__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_While__Group__3__Impl
	rule__Statement_While__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_While__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_WhileAccess().getBlockAssignment_3()); }
(rule__Statement_While__BlockAssignment_3)
{ after(grammarAccess.getStatement_WhileAccess().getBlockAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_While__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_While__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_While__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_WhileAccess().getEndKeyword_4()); }

	'end' 

{ after(grammarAccess.getStatement_WhileAccess().getEndKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Statement_Repeat__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_Repeat__Group__0__Impl
	rule__Statement_Repeat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_Repeat__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_RepeatAccess().getRepeatKeyword_0()); }

	'repeat' 

{ after(grammarAccess.getStatement_RepeatAccess().getRepeatKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_Repeat__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_Repeat__Group__1__Impl
	rule__Statement_Repeat__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_Repeat__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_RepeatAccess().getBlockAssignment_1()); }
(rule__Statement_Repeat__BlockAssignment_1)
{ after(grammarAccess.getStatement_RepeatAccess().getBlockAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_Repeat__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_Repeat__Group__2__Impl
	rule__Statement_Repeat__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_Repeat__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_RepeatAccess().getUntilKeyword_2()); }

	'until' 

{ after(grammarAccess.getStatement_RepeatAccess().getUntilKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_Repeat__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_Repeat__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_Repeat__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_RepeatAccess().getExpressionAssignment_3()); }
(rule__Statement_Repeat__ExpressionAssignment_3)
{ after(grammarAccess.getStatement_RepeatAccess().getExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Statement_If_Then_Else__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_If_Then_Else__Group__0__Impl
	rule__Statement_If_Then_Else__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_If_Then_Else__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_If_Then_ElseAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getStatement_If_Then_ElseAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_If_Then_Else__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_If_Then_Else__Group__1__Impl
	rule__Statement_If_Then_Else__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_If_Then_Else__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_If_Then_ElseAccess().getIfExpressionAssignment_1()); }
(rule__Statement_If_Then_Else__IfExpressionAssignment_1)
{ after(grammarAccess.getStatement_If_Then_ElseAccess().getIfExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_If_Then_Else__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_If_Then_Else__Group__2__Impl
	rule__Statement_If_Then_Else__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_If_Then_Else__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_If_Then_ElseAccess().getThenKeyword_2()); }

	'then' 

{ after(grammarAccess.getStatement_If_Then_ElseAccess().getThenKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_If_Then_Else__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_If_Then_Else__Group__3__Impl
	rule__Statement_If_Then_Else__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_If_Then_Else__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_If_Then_ElseAccess().getIfBlockAssignment_3()); }
(rule__Statement_If_Then_Else__IfBlockAssignment_3)
{ after(grammarAccess.getStatement_If_Then_ElseAccess().getIfBlockAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_If_Then_Else__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_If_Then_Else__Group__4__Impl
	rule__Statement_If_Then_Else__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_If_Then_Else__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_If_Then_ElseAccess().getElseIfAssignment_4()); }
(rule__Statement_If_Then_Else__ElseIfAssignment_4)*
{ after(grammarAccess.getStatement_If_Then_ElseAccess().getElseIfAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_If_Then_Else__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_If_Then_Else__Group__5__Impl
	rule__Statement_If_Then_Else__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_If_Then_Else__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_If_Then_ElseAccess().getGroup_5()); }
(rule__Statement_If_Then_Else__Group_5__0)?
{ after(grammarAccess.getStatement_If_Then_ElseAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_If_Then_Else__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_If_Then_Else__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_If_Then_Else__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_If_Then_ElseAccess().getEndKeyword_6()); }

	'end' 

{ after(grammarAccess.getStatement_If_Then_ElseAccess().getEndKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Statement_If_Then_Else__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_If_Then_Else__Group_5__0__Impl
	rule__Statement_If_Then_Else__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_If_Then_Else__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_If_Then_ElseAccess().getElseKeyword_5_0()); }

	'else' 

{ after(grammarAccess.getStatement_If_Then_ElseAccess().getElseKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_If_Then_Else__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_If_Then_Else__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_If_Then_Else__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_If_Then_ElseAccess().getElseBlockAssignment_5_1()); }
(rule__Statement_If_Then_Else__ElseBlockAssignment_5_1)
{ after(grammarAccess.getStatement_If_Then_ElseAccess().getElseBlockAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement_If_Then_Else_ElseIfPart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_If_Then_Else_ElseIfPart__Group__0__Impl
	rule__Statement_If_Then_Else_ElseIfPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_If_Then_Else_ElseIfPart__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_If_Then_Else_ElseIfPartAccess().getElseifKeyword_0()); }

	'elseif' 

{ after(grammarAccess.getStatement_If_Then_Else_ElseIfPartAccess().getElseifKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_If_Then_Else_ElseIfPart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_If_Then_Else_ElseIfPart__Group__1__Impl
	rule__Statement_If_Then_Else_ElseIfPart__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_If_Then_Else_ElseIfPart__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_If_Then_Else_ElseIfPartAccess().getElseifExpressionAssignment_1()); }
(rule__Statement_If_Then_Else_ElseIfPart__ElseifExpressionAssignment_1)
{ after(grammarAccess.getStatement_If_Then_Else_ElseIfPartAccess().getElseifExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_If_Then_Else_ElseIfPart__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_If_Then_Else_ElseIfPart__Group__2__Impl
	rule__Statement_If_Then_Else_ElseIfPart__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_If_Then_Else_ElseIfPart__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_If_Then_Else_ElseIfPartAccess().getThenKeyword_2()); }

	'then' 

{ after(grammarAccess.getStatement_If_Then_Else_ElseIfPartAccess().getThenKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_If_Then_Else_ElseIfPart__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_If_Then_Else_ElseIfPart__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_If_Then_Else_ElseIfPart__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_If_Then_Else_ElseIfPartAccess().getElseifBlockAssignment_3()); }
(rule__Statement_If_Then_Else_ElseIfPart__ElseifBlockAssignment_3)
{ after(grammarAccess.getStatement_If_Then_Else_ElseIfPartAccess().getElseifBlockAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Statement_For_Numeric__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_For_Numeric__Group__0__Impl
	rule__Statement_For_Numeric__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Numeric__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_NumericAccess().getForKeyword_0()); }

	'for' 

{ after(grammarAccess.getStatement_For_NumericAccess().getForKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_For_Numeric__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_For_Numeric__Group__1__Impl
	rule__Statement_For_Numeric__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Numeric__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_NumericAccess().getIteratorNameAssignment_1()); }
(rule__Statement_For_Numeric__IteratorNameAssignment_1)
{ after(grammarAccess.getStatement_For_NumericAccess().getIteratorNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_For_Numeric__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_For_Numeric__Group__2__Impl
	rule__Statement_For_Numeric__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Numeric__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_NumericAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getStatement_For_NumericAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_For_Numeric__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_For_Numeric__Group__3__Impl
	rule__Statement_For_Numeric__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Numeric__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_NumericAccess().getStartExprAssignment_3()); }
(rule__Statement_For_Numeric__StartExprAssignment_3)
{ after(grammarAccess.getStatement_For_NumericAccess().getStartExprAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_For_Numeric__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_For_Numeric__Group__4__Impl
	rule__Statement_For_Numeric__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Numeric__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_NumericAccess().getCommaKeyword_4()); }

	',' 

{ after(grammarAccess.getStatement_For_NumericAccess().getCommaKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_For_Numeric__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_For_Numeric__Group__5__Impl
	rule__Statement_For_Numeric__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Numeric__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_NumericAccess().getUntilExprAssignment_5()); }
(rule__Statement_For_Numeric__UntilExprAssignment_5)
{ after(grammarAccess.getStatement_For_NumericAccess().getUntilExprAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_For_Numeric__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_For_Numeric__Group__6__Impl
	rule__Statement_For_Numeric__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Numeric__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_NumericAccess().getGroup_6()); }
(rule__Statement_For_Numeric__Group_6__0)?
{ after(grammarAccess.getStatement_For_NumericAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_For_Numeric__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_For_Numeric__Group__7__Impl
	rule__Statement_For_Numeric__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Numeric__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_NumericAccess().getDoKeyword_7()); }

	'do' 

{ after(grammarAccess.getStatement_For_NumericAccess().getDoKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_For_Numeric__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_For_Numeric__Group__8__Impl
	rule__Statement_For_Numeric__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Numeric__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_NumericAccess().getBlockAssignment_8()); }
(rule__Statement_For_Numeric__BlockAssignment_8)
{ after(grammarAccess.getStatement_For_NumericAccess().getBlockAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_For_Numeric__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_For_Numeric__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Numeric__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_NumericAccess().getEndKeyword_9()); }

	'end' 

{ after(grammarAccess.getStatement_For_NumericAccess().getEndKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Statement_For_Numeric__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_For_Numeric__Group_6__0__Impl
	rule__Statement_For_Numeric__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Numeric__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_NumericAccess().getCommaKeyword_6_0()); }

	',' 

{ after(grammarAccess.getStatement_For_NumericAccess().getCommaKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_For_Numeric__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_For_Numeric__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Numeric__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_NumericAccess().getStepExprAssignment_6_1()); }
(rule__Statement_For_Numeric__StepExprAssignment_6_1)
{ after(grammarAccess.getStatement_For_NumericAccess().getStepExprAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement_For_Generic__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_For_Generic__Group__0__Impl
	rule__Statement_For_Generic__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Generic__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_GenericAccess().getForKeyword_0()); }

	'for' 

{ after(grammarAccess.getStatement_For_GenericAccess().getForKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_For_Generic__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_For_Generic__Group__1__Impl
	rule__Statement_For_Generic__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Generic__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_GenericAccess().getNamesAssignment_1()); }
(rule__Statement_For_Generic__NamesAssignment_1)
{ after(grammarAccess.getStatement_For_GenericAccess().getNamesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_For_Generic__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_For_Generic__Group__2__Impl
	rule__Statement_For_Generic__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Generic__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_GenericAccess().getGroup_2()); }
(rule__Statement_For_Generic__Group_2__0)*
{ after(grammarAccess.getStatement_For_GenericAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_For_Generic__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_For_Generic__Group__3__Impl
	rule__Statement_For_Generic__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Generic__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_GenericAccess().getInKeyword_3()); }

	'in' 

{ after(grammarAccess.getStatement_For_GenericAccess().getInKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_For_Generic__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_For_Generic__Group__4__Impl
	rule__Statement_For_Generic__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Generic__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_GenericAccess().getExpressionsAssignment_4()); }
(rule__Statement_For_Generic__ExpressionsAssignment_4)
{ after(grammarAccess.getStatement_For_GenericAccess().getExpressionsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_For_Generic__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_For_Generic__Group__5__Impl
	rule__Statement_For_Generic__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Generic__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_GenericAccess().getGroup_5()); }
(rule__Statement_For_Generic__Group_5__0)*
{ after(grammarAccess.getStatement_For_GenericAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_For_Generic__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_For_Generic__Group__6__Impl
	rule__Statement_For_Generic__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Generic__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_GenericAccess().getDoKeyword_6()); }

	'do' 

{ after(grammarAccess.getStatement_For_GenericAccess().getDoKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_For_Generic__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_For_Generic__Group__7__Impl
	rule__Statement_For_Generic__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Generic__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_GenericAccess().getBlockAssignment_7()); }
(rule__Statement_For_Generic__BlockAssignment_7)
{ after(grammarAccess.getStatement_For_GenericAccess().getBlockAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_For_Generic__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_For_Generic__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Generic__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_GenericAccess().getEndKeyword_8()); }

	'end' 

{ after(grammarAccess.getStatement_For_GenericAccess().getEndKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Statement_For_Generic__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_For_Generic__Group_2__0__Impl
	rule__Statement_For_Generic__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Generic__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_GenericAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getStatement_For_GenericAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_For_Generic__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_For_Generic__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Generic__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_GenericAccess().getNamesAssignment_2_1()); }
(rule__Statement_For_Generic__NamesAssignment_2_1)
{ after(grammarAccess.getStatement_For_GenericAccess().getNamesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement_For_Generic__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_For_Generic__Group_5__0__Impl
	rule__Statement_For_Generic__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Generic__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_GenericAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getStatement_For_GenericAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_For_Generic__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_For_Generic__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Generic__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_GenericAccess().getExpressionsAssignment_5_1()); }
(rule__Statement_For_Generic__ExpressionsAssignment_5_1)
{ after(grammarAccess.getStatement_For_GenericAccess().getExpressionsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement_GlobalFunction_Declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_GlobalFunction_Declaration__Group__0__Impl
	rule__Statement_GlobalFunction_Declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_GlobalFunction_Declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getFunctionKeyword_0()); }

	'function' 

{ after(grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getFunctionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_GlobalFunction_Declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_GlobalFunction_Declaration__Group__1__Impl
	rule__Statement_GlobalFunction_Declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_GlobalFunction_Declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getPrefixAssignment_1()); }
(rule__Statement_GlobalFunction_Declaration__PrefixAssignment_1)
{ after(grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getPrefixAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_GlobalFunction_Declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_GlobalFunction_Declaration__Group__2__Impl
	rule__Statement_GlobalFunction_Declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_GlobalFunction_Declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getGroup_2()); }
(rule__Statement_GlobalFunction_Declaration__Group_2__0)*
{ after(grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_GlobalFunction_Declaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_GlobalFunction_Declaration__Group__3__Impl
	rule__Statement_GlobalFunction_Declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_GlobalFunction_Declaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getGroup_3()); }
(rule__Statement_GlobalFunction_Declaration__Group_3__0)?
{ after(grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_GlobalFunction_Declaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_GlobalFunction_Declaration__Group__4__Impl
	rule__Statement_GlobalFunction_Declaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_GlobalFunction_Declaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getFunctionAssignment_4()); }
(rule__Statement_GlobalFunction_Declaration__FunctionAssignment_4)
{ after(grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getFunctionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_GlobalFunction_Declaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_GlobalFunction_Declaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_GlobalFunction_Declaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getEndKeyword_5()); }

	'end' 

{ after(grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getEndKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Statement_GlobalFunction_Declaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_GlobalFunction_Declaration__Group_2__0__Impl
	rule__Statement_GlobalFunction_Declaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_GlobalFunction_Declaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getFullStopKeyword_2_0()); }

	'.' 

{ after(grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getFullStopKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_GlobalFunction_Declaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_GlobalFunction_Declaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_GlobalFunction_Declaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getPrefixAssignment_2_1()); }
(rule__Statement_GlobalFunction_Declaration__PrefixAssignment_2_1)
{ after(grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getPrefixAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement_GlobalFunction_Declaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_GlobalFunction_Declaration__Group_3__0__Impl
	rule__Statement_GlobalFunction_Declaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_GlobalFunction_Declaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getColonKeyword_3_0()); }

	':' 

{ after(grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getColonKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_GlobalFunction_Declaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_GlobalFunction_Declaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_GlobalFunction_Declaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getFunctionNameAssignment_3_1()); }
(rule__Statement_GlobalFunction_Declaration__FunctionNameAssignment_3_1)
{ after(grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getFunctionNameAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement_LocalFunction_Declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_LocalFunction_Declaration__Group__0__Impl
	rule__Statement_LocalFunction_Declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_LocalFunction_Declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_LocalFunction_DeclarationAccess().getLocalKeyword_0()); }

	'local' 

{ after(grammarAccess.getStatement_LocalFunction_DeclarationAccess().getLocalKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_LocalFunction_Declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_LocalFunction_Declaration__Group__1__Impl
	rule__Statement_LocalFunction_Declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_LocalFunction_Declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_LocalFunction_DeclarationAccess().getFunctionKeyword_1()); }

	'function' 

{ after(grammarAccess.getStatement_LocalFunction_DeclarationAccess().getFunctionKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_LocalFunction_Declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_LocalFunction_Declaration__Group__2__Impl
	rule__Statement_LocalFunction_Declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_LocalFunction_Declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_LocalFunction_DeclarationAccess().getFunctionNameAssignment_2()); }
(rule__Statement_LocalFunction_Declaration__FunctionNameAssignment_2)
{ after(grammarAccess.getStatement_LocalFunction_DeclarationAccess().getFunctionNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_LocalFunction_Declaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_LocalFunction_Declaration__Group__3__Impl
	rule__Statement_LocalFunction_Declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_LocalFunction_Declaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_LocalFunction_DeclarationAccess().getFunctionAssignment_3()); }
(rule__Statement_LocalFunction_Declaration__FunctionAssignment_3)
{ after(grammarAccess.getStatement_LocalFunction_DeclarationAccess().getFunctionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_LocalFunction_Declaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_LocalFunction_Declaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_LocalFunction_Declaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_LocalFunction_DeclarationAccess().getEndKeyword_4()); }

	'end' 

{ after(grammarAccess.getStatement_LocalFunction_DeclarationAccess().getEndKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Statement_Local_Variable_Declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_Local_Variable_Declaration__Group__0__Impl
	rule__Statement_Local_Variable_Declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_Local_Variable_Declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_Local_Variable_DeclarationAccess().getLocalKeyword_0()); }

	'local' 

{ after(grammarAccess.getStatement_Local_Variable_DeclarationAccess().getLocalKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_Local_Variable_Declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_Local_Variable_Declaration__Group__1__Impl
	rule__Statement_Local_Variable_Declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_Local_Variable_Declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_Local_Variable_DeclarationAccess().getVariableNamesAssignment_1()); }
(rule__Statement_Local_Variable_Declaration__VariableNamesAssignment_1)
{ after(grammarAccess.getStatement_Local_Variable_DeclarationAccess().getVariableNamesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_Local_Variable_Declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_Local_Variable_Declaration__Group__2__Impl
	rule__Statement_Local_Variable_Declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_Local_Variable_Declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_Local_Variable_DeclarationAccess().getGroup_2()); }
(rule__Statement_Local_Variable_Declaration__Group_2__0)*
{ after(grammarAccess.getStatement_Local_Variable_DeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_Local_Variable_Declaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_Local_Variable_Declaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_Local_Variable_Declaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_Local_Variable_DeclarationAccess().getGroup_3()); }
(rule__Statement_Local_Variable_Declaration__Group_3__0)?
{ after(grammarAccess.getStatement_Local_Variable_DeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Statement_Local_Variable_Declaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_Local_Variable_Declaration__Group_2__0__Impl
	rule__Statement_Local_Variable_Declaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_Local_Variable_Declaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_Local_Variable_DeclarationAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getStatement_Local_Variable_DeclarationAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_Local_Variable_Declaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_Local_Variable_Declaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_Local_Variable_Declaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_Local_Variable_DeclarationAccess().getVariableNamesAssignment_2_1()); }
(rule__Statement_Local_Variable_Declaration__VariableNamesAssignment_2_1)
{ after(grammarAccess.getStatement_Local_Variable_DeclarationAccess().getVariableNamesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement_Local_Variable_Declaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_Local_Variable_Declaration__Group_3__0__Impl
	rule__Statement_Local_Variable_Declaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_Local_Variable_Declaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_Local_Variable_DeclarationAccess().getEqualsSignKeyword_3_0()); }

	'=' 

{ after(grammarAccess.getStatement_Local_Variable_DeclarationAccess().getEqualsSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_Local_Variable_Declaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_Local_Variable_Declaration__Group_3__1__Impl
	rule__Statement_Local_Variable_Declaration__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_Local_Variable_Declaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_Local_Variable_DeclarationAccess().getInitialValueAssignment_3_1()); }
(rule__Statement_Local_Variable_Declaration__InitialValueAssignment_3_1)
{ after(grammarAccess.getStatement_Local_Variable_DeclarationAccess().getInitialValueAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_Local_Variable_Declaration__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_Local_Variable_Declaration__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_Local_Variable_Declaration__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_Local_Variable_DeclarationAccess().getGroup_3_2()); }
(rule__Statement_Local_Variable_Declaration__Group_3_2__0)*
{ after(grammarAccess.getStatement_Local_Variable_DeclarationAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Statement_Local_Variable_Declaration__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_Local_Variable_Declaration__Group_3_2__0__Impl
	rule__Statement_Local_Variable_Declaration__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_Local_Variable_Declaration__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_Local_Variable_DeclarationAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getStatement_Local_Variable_DeclarationAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_Local_Variable_Declaration__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_Local_Variable_Declaration__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_Local_Variable_Declaration__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_Local_Variable_DeclarationAccess().getInitialValueAssignment_3_2_1()); }
(rule__Statement_Local_Variable_Declaration__InitialValueAssignment_3_2_1)
{ after(grammarAccess.getStatement_Local_Variable_DeclarationAccess().getInitialValueAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement_FunctioncallOrAssignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_FunctioncallOrAssignment__Group__0__Impl
	rule__Statement_FunctioncallOrAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_FunctioncallOrAssignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getExpression_AccessMemberOrArrayElementParserRuleCall_0()); }
	ruleExpression_AccessMemberOrArrayElement
{ after(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getExpression_AccessMemberOrArrayElementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_FunctioncallOrAssignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_FunctioncallOrAssignment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_FunctioncallOrAssignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getAlternatives_1()); }
(rule__Statement_FunctioncallOrAssignment__Alternatives_1)
{ after(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement_FunctioncallOrAssignment__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_FunctioncallOrAssignment__Group_1_0__0__Impl
	rule__Statement_FunctioncallOrAssignment__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_FunctioncallOrAssignment__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getStatement_AssignmentVariableAction_1_0_0()); }
(

)
{ after(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getStatement_AssignmentVariableAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_FunctioncallOrAssignment__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_FunctioncallOrAssignment__Group_1_0__1__Impl
	rule__Statement_FunctioncallOrAssignment__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_FunctioncallOrAssignment__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getGroup_1_0_1()); }
(rule__Statement_FunctioncallOrAssignment__Group_1_0_1__0)*
{ after(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getGroup_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_FunctioncallOrAssignment__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_FunctioncallOrAssignment__Group_1_0__2__Impl
	rule__Statement_FunctioncallOrAssignment__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_FunctioncallOrAssignment__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getEqualsSignKeyword_1_0_2()); }

	'=' 

{ after(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getEqualsSignKeyword_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_FunctioncallOrAssignment__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_FunctioncallOrAssignment__Group_1_0__3__Impl
	rule__Statement_FunctioncallOrAssignment__Group_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_FunctioncallOrAssignment__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getValuesAssignment_1_0_3()); }
(rule__Statement_FunctioncallOrAssignment__ValuesAssignment_1_0_3)
{ after(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getValuesAssignment_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_FunctioncallOrAssignment__Group_1_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_FunctioncallOrAssignment__Group_1_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_FunctioncallOrAssignment__Group_1_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getGroup_1_0_4()); }
(rule__Statement_FunctioncallOrAssignment__Group_1_0_4__0)*
{ after(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getGroup_1_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Statement_FunctioncallOrAssignment__Group_1_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_FunctioncallOrAssignment__Group_1_0_1__0__Impl
	rule__Statement_FunctioncallOrAssignment__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_FunctioncallOrAssignment__Group_1_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getCommaKeyword_1_0_1_0()); }

	',' 

{ after(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getCommaKeyword_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_FunctioncallOrAssignment__Group_1_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_FunctioncallOrAssignment__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_FunctioncallOrAssignment__Group_1_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getVariableAssignment_1_0_1_1()); }
(rule__Statement_FunctioncallOrAssignment__VariableAssignment_1_0_1_1)
{ after(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getVariableAssignment_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement_FunctioncallOrAssignment__Group_1_0_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_FunctioncallOrAssignment__Group_1_0_4__0__Impl
	rule__Statement_FunctioncallOrAssignment__Group_1_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_FunctioncallOrAssignment__Group_1_0_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getCommaKeyword_1_0_4_0()); }

	',' 

{ after(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getCommaKeyword_1_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_FunctioncallOrAssignment__Group_1_0_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_FunctioncallOrAssignment__Group_1_0_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_FunctioncallOrAssignment__Group_1_0_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getValuesAssignment_1_0_4_1()); }
(rule__Statement_FunctioncallOrAssignment__ValuesAssignment_1_0_4_1)
{ after(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getValuesAssignment_1_0_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement_FunctioncallOrAssignment__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_FunctioncallOrAssignment__Group_1_1__0__Impl
	rule__Statement_FunctioncallOrAssignment__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_FunctioncallOrAssignment__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getColonKeyword_1_1_0()); }

	':' 

{ after(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getColonKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_FunctioncallOrAssignment__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_FunctioncallOrAssignment__Group_1_1__1__Impl
	rule__Statement_FunctioncallOrAssignment__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_FunctioncallOrAssignment__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getStatement_CallMemberFunctionObjectAction_1_1_1()); }
(

)
{ after(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getStatement_CallMemberFunctionObjectAction_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_FunctioncallOrAssignment__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_FunctioncallOrAssignment__Group_1_1__2__Impl
	rule__Statement_FunctioncallOrAssignment__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_FunctioncallOrAssignment__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getMemberFunctionNameAssignment_1_1_2()); }
(rule__Statement_FunctioncallOrAssignment__MemberFunctionNameAssignment_1_1_2)
{ after(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getMemberFunctionNameAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_FunctioncallOrAssignment__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_FunctioncallOrAssignment__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_FunctioncallOrAssignment__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getArgumentsAssignment_1_1_3()); }
(rule__Statement_FunctioncallOrAssignment__ArgumentsAssignment_1_1_3)
{ after(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getArgumentsAssignment_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Statement_FunctioncallOrAssignment__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_FunctioncallOrAssignment__Group_1_2__0__Impl
	rule__Statement_FunctioncallOrAssignment__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_FunctioncallOrAssignment__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getStatement_CallFunctionObjectAction_1_2_0()); }
(

)
{ after(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getStatement_CallFunctionObjectAction_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_FunctioncallOrAssignment__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_FunctioncallOrAssignment__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_FunctioncallOrAssignment__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getArgumentsAssignment_1_2_1()); }
(rule__Statement_FunctioncallOrAssignment__ArgumentsAssignment_1_2_1)
{ after(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getArgumentsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_Or__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Or__Group__0__Impl
	rule__Expression_Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Or__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_OrAccess().getExpression_AndParserRuleCall_0()); }
	ruleExpression_And
{ after(grammarAccess.getExpression_OrAccess().getExpression_AndParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Or__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Or__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_OrAccess().getGroup_1()); }
(rule__Expression_Or__Group_1__0)*
{ after(grammarAccess.getExpression_OrAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_Or__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Or__Group_1__0__Impl
	rule__Expression_Or__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Or__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_OrAccess().getOrKeyword_1_0()); }

	'or' 

{ after(grammarAccess.getExpression_OrAccess().getOrKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Or__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Or__Group_1__1__Impl
	rule__Expression_Or__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Or__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_OrAccess().getExpression_OrLeftAction_1_1()); }
(

)
{ after(grammarAccess.getExpression_OrAccess().getExpression_OrLeftAction_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Or__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Or__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Or__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_OrAccess().getRightAssignment_1_2()); }
(rule__Expression_Or__RightAssignment_1_2)
{ after(grammarAccess.getExpression_OrAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_And__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_And__Group__0__Impl
	rule__Expression_And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_And__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_AndAccess().getExpression_CompareParserRuleCall_0()); }
	ruleExpression_Compare
{ after(grammarAccess.getExpression_AndAccess().getExpression_CompareParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_And__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_And__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_AndAccess().getGroup_1()); }
(rule__Expression_And__Group_1__0)*
{ after(grammarAccess.getExpression_AndAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_And__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_And__Group_1__0__Impl
	rule__Expression_And__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_And__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_AndAccess().getAndKeyword_1_0()); }

	'and' 

{ after(grammarAccess.getExpression_AndAccess().getAndKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_And__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_And__Group_1__1__Impl
	rule__Expression_And__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_And__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_AndAccess().getExpression_AndLeftAction_1_1()); }
(

)
{ after(grammarAccess.getExpression_AndAccess().getExpression_AndLeftAction_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_And__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_And__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_And__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_AndAccess().getRightAssignment_1_2()); }
(rule__Expression_And__RightAssignment_1_2)
{ after(grammarAccess.getExpression_AndAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_Compare__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Compare__Group__0__Impl
	rule__Expression_Compare__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Compare__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_CompareAccess().getExpression_ConcatenationParserRuleCall_0()); }
	ruleExpression_Concatenation
{ after(grammarAccess.getExpression_CompareAccess().getExpression_ConcatenationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Compare__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Compare__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Compare__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_CompareAccess().getAlternatives_1()); }
(rule__Expression_Compare__Alternatives_1)*
{ after(grammarAccess.getExpression_CompareAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_Compare__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Compare__Group_1_0__0__Impl
	rule__Expression_Compare__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Compare__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_CompareAccess().getGreaterThanSignKeyword_1_0_0()); }

	'>' 

{ after(grammarAccess.getExpression_CompareAccess().getGreaterThanSignKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Compare__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Compare__Group_1_0__1__Impl
	rule__Expression_Compare__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Compare__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_CompareAccess().getExpression_LargerLeftAction_1_0_1()); }
(

)
{ after(grammarAccess.getExpression_CompareAccess().getExpression_LargerLeftAction_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Compare__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Compare__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Compare__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_CompareAccess().getRightAssignment_1_0_2()); }
(rule__Expression_Compare__RightAssignment_1_0_2)
{ after(grammarAccess.getExpression_CompareAccess().getRightAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_Compare__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Compare__Group_1_1__0__Impl
	rule__Expression_Compare__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Compare__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_CompareAccess().getGreaterThanSignEqualsSignKeyword_1_1_0()); }

	'>=' 

{ after(grammarAccess.getExpression_CompareAccess().getGreaterThanSignEqualsSignKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Compare__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Compare__Group_1_1__1__Impl
	rule__Expression_Compare__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Compare__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_CompareAccess().getExpression_Larger_EqualLeftAction_1_1_1()); }
(

)
{ after(grammarAccess.getExpression_CompareAccess().getExpression_Larger_EqualLeftAction_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Compare__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Compare__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Compare__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_CompareAccess().getRightAssignment_1_1_2()); }
(rule__Expression_Compare__RightAssignment_1_1_2)
{ after(grammarAccess.getExpression_CompareAccess().getRightAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_Compare__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Compare__Group_1_2__0__Impl
	rule__Expression_Compare__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Compare__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_CompareAccess().getLessThanSignKeyword_1_2_0()); }

	'<' 

{ after(grammarAccess.getExpression_CompareAccess().getLessThanSignKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Compare__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Compare__Group_1_2__1__Impl
	rule__Expression_Compare__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Compare__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_CompareAccess().getExpression_SmallerLeftAction_1_2_1()); }
(

)
{ after(grammarAccess.getExpression_CompareAccess().getExpression_SmallerLeftAction_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Compare__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Compare__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Compare__Group_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_CompareAccess().getRightAssignment_1_2_2()); }
(rule__Expression_Compare__RightAssignment_1_2_2)
{ after(grammarAccess.getExpression_CompareAccess().getRightAssignment_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_Compare__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Compare__Group_1_3__0__Impl
	rule__Expression_Compare__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Compare__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_CompareAccess().getLessThanSignEqualsSignKeyword_1_3_0()); }

	'<=' 

{ after(grammarAccess.getExpression_CompareAccess().getLessThanSignEqualsSignKeyword_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Compare__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Compare__Group_1_3__1__Impl
	rule__Expression_Compare__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Compare__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_CompareAccess().getExpression_Smaller_EqualLeftAction_1_3_1()); }
(

)
{ after(grammarAccess.getExpression_CompareAccess().getExpression_Smaller_EqualLeftAction_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Compare__Group_1_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Compare__Group_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Compare__Group_1_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_CompareAccess().getRightAssignment_1_3_2()); }
(rule__Expression_Compare__RightAssignment_1_3_2)
{ after(grammarAccess.getExpression_CompareAccess().getRightAssignment_1_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_Compare__Group_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Compare__Group_1_4__0__Impl
	rule__Expression_Compare__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Compare__Group_1_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_CompareAccess().getEqualsSignEqualsSignKeyword_1_4_0()); }

	'==' 

{ after(grammarAccess.getExpression_CompareAccess().getEqualsSignEqualsSignKeyword_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Compare__Group_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Compare__Group_1_4__1__Impl
	rule__Expression_Compare__Group_1_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Compare__Group_1_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_CompareAccess().getExpression_EqualLeftAction_1_4_1()); }
(

)
{ after(grammarAccess.getExpression_CompareAccess().getExpression_EqualLeftAction_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Compare__Group_1_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Compare__Group_1_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Compare__Group_1_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_CompareAccess().getRightAssignment_1_4_2()); }
(rule__Expression_Compare__RightAssignment_1_4_2)
{ after(grammarAccess.getExpression_CompareAccess().getRightAssignment_1_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_Compare__Group_1_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Compare__Group_1_5__0__Impl
	rule__Expression_Compare__Group_1_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Compare__Group_1_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_CompareAccess().getTildeEqualsSignKeyword_1_5_0()); }

	'~=' 

{ after(grammarAccess.getExpression_CompareAccess().getTildeEqualsSignKeyword_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Compare__Group_1_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Compare__Group_1_5__1__Impl
	rule__Expression_Compare__Group_1_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Compare__Group_1_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_CompareAccess().getExpression_Not_EqualLeftAction_1_5_1()); }
(

)
{ after(grammarAccess.getExpression_CompareAccess().getExpression_Not_EqualLeftAction_1_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Compare__Group_1_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Compare__Group_1_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Compare__Group_1_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_CompareAccess().getRightAssignment_1_5_2()); }
(rule__Expression_Compare__RightAssignment_1_5_2)
{ after(grammarAccess.getExpression_CompareAccess().getRightAssignment_1_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_Concatenation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Concatenation__Group__0__Impl
	rule__Expression_Concatenation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Concatenation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_ConcatenationAccess().getExpression_PlusMinusParserRuleCall_0()); }
	ruleExpression_PlusMinus
{ after(grammarAccess.getExpression_ConcatenationAccess().getExpression_PlusMinusParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Concatenation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Concatenation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Concatenation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_ConcatenationAccess().getGroup_1()); }
(rule__Expression_Concatenation__Group_1__0)?
{ after(grammarAccess.getExpression_ConcatenationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_Concatenation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Concatenation__Group_1__0__Impl
	rule__Expression_Concatenation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Concatenation__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_ConcatenationAccess().getFullStopFullStopKeyword_1_0()); }

	'..' 

{ after(grammarAccess.getExpression_ConcatenationAccess().getFullStopFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Concatenation__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Concatenation__Group_1__1__Impl
	rule__Expression_Concatenation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Concatenation__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_ConcatenationAccess().getExpression_ConcatenationLeftAction_1_1()); }
(

)
{ after(grammarAccess.getExpression_ConcatenationAccess().getExpression_ConcatenationLeftAction_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Concatenation__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Concatenation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Concatenation__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_ConcatenationAccess().getRightAssignment_1_2()); }
(rule__Expression_Concatenation__RightAssignment_1_2)
{ after(grammarAccess.getExpression_ConcatenationAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_PlusMinus__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_PlusMinus__Group__0__Impl
	rule__Expression_PlusMinus__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_PlusMinus__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_PlusMinusAccess().getExpression_MultiplicationDivisionModuloParserRuleCall_0()); }
	ruleExpression_MultiplicationDivisionModulo
{ after(grammarAccess.getExpression_PlusMinusAccess().getExpression_MultiplicationDivisionModuloParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_PlusMinus__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_PlusMinus__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_PlusMinus__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_PlusMinusAccess().getAlternatives_1()); }
(rule__Expression_PlusMinus__Alternatives_1)*
{ after(grammarAccess.getExpression_PlusMinusAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_PlusMinus__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_PlusMinus__Group_1_0__0__Impl
	rule__Expression_PlusMinus__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_PlusMinus__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_PlusMinusAccess().getPlusSignKeyword_1_0_0()); }

	'+' 

{ after(grammarAccess.getExpression_PlusMinusAccess().getPlusSignKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_PlusMinus__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_PlusMinus__Group_1_0__1__Impl
	rule__Expression_PlusMinus__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_PlusMinus__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_PlusMinusAccess().getExpression_PlusLeftAction_1_0_1()); }
(

)
{ after(grammarAccess.getExpression_PlusMinusAccess().getExpression_PlusLeftAction_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_PlusMinus__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_PlusMinus__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_PlusMinus__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_PlusMinusAccess().getRightAssignment_1_0_2()); }
(rule__Expression_PlusMinus__RightAssignment_1_0_2)
{ after(grammarAccess.getExpression_PlusMinusAccess().getRightAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_PlusMinus__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_PlusMinus__Group_1_1__0__Impl
	rule__Expression_PlusMinus__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_PlusMinus__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_PlusMinusAccess().getHyphenMinusKeyword_1_1_0()); }

	'-' 

{ after(grammarAccess.getExpression_PlusMinusAccess().getHyphenMinusKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_PlusMinus__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_PlusMinus__Group_1_1__1__Impl
	rule__Expression_PlusMinus__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_PlusMinus__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_PlusMinusAccess().getExpression_MinusLeftAction_1_1_1()); }
(

)
{ after(grammarAccess.getExpression_PlusMinusAccess().getExpression_MinusLeftAction_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_PlusMinus__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_PlusMinus__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_PlusMinus__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_PlusMinusAccess().getRightAssignment_1_1_2()); }
(rule__Expression_PlusMinus__RightAssignment_1_1_2)
{ after(grammarAccess.getExpression_PlusMinusAccess().getRightAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_MultiplicationDivisionModulo__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_MultiplicationDivisionModulo__Group__0__Impl
	rule__Expression_MultiplicationDivisionModulo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_MultiplicationDivisionModulo__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getExpression_UnaryParserRuleCall_0()); }
	ruleExpression_Unary
{ after(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getExpression_UnaryParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_MultiplicationDivisionModulo__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_MultiplicationDivisionModulo__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_MultiplicationDivisionModulo__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getAlternatives_1()); }
(rule__Expression_MultiplicationDivisionModulo__Alternatives_1)*
{ after(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_MultiplicationDivisionModulo__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_MultiplicationDivisionModulo__Group_1_0__0__Impl
	rule__Expression_MultiplicationDivisionModulo__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_MultiplicationDivisionModulo__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getAsteriskKeyword_1_0_0()); }

	'*' 

{ after(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getAsteriskKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_MultiplicationDivisionModulo__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_MultiplicationDivisionModulo__Group_1_0__1__Impl
	rule__Expression_MultiplicationDivisionModulo__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_MultiplicationDivisionModulo__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getExpression_MultiplicationLeftAction_1_0_1()); }
(

)
{ after(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getExpression_MultiplicationLeftAction_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_MultiplicationDivisionModulo__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_MultiplicationDivisionModulo__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_MultiplicationDivisionModulo__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getRightAssignment_1_0_2()); }
(rule__Expression_MultiplicationDivisionModulo__RightAssignment_1_0_2)
{ after(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getRightAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_MultiplicationDivisionModulo__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_MultiplicationDivisionModulo__Group_1_1__0__Impl
	rule__Expression_MultiplicationDivisionModulo__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_MultiplicationDivisionModulo__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getSolidusKeyword_1_1_0()); }

	'/' 

{ after(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getSolidusKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_MultiplicationDivisionModulo__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_MultiplicationDivisionModulo__Group_1_1__1__Impl
	rule__Expression_MultiplicationDivisionModulo__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_MultiplicationDivisionModulo__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getExpression_DivisionLeftAction_1_1_1()); }
(

)
{ after(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getExpression_DivisionLeftAction_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_MultiplicationDivisionModulo__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_MultiplicationDivisionModulo__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_MultiplicationDivisionModulo__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getRightAssignment_1_1_2()); }
(rule__Expression_MultiplicationDivisionModulo__RightAssignment_1_1_2)
{ after(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getRightAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_MultiplicationDivisionModulo__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_MultiplicationDivisionModulo__Group_1_2__0__Impl
	rule__Expression_MultiplicationDivisionModulo__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_MultiplicationDivisionModulo__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getPercentSignKeyword_1_2_0()); }

	'%' 

{ after(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getPercentSignKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_MultiplicationDivisionModulo__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_MultiplicationDivisionModulo__Group_1_2__1__Impl
	rule__Expression_MultiplicationDivisionModulo__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_MultiplicationDivisionModulo__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getExpression_ModuloLeftAction_1_2_1()); }
(

)
{ after(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getExpression_ModuloLeftAction_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_MultiplicationDivisionModulo__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_MultiplicationDivisionModulo__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_MultiplicationDivisionModulo__Group_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getRightAssignment_1_2_2()); }
(rule__Expression_MultiplicationDivisionModulo__RightAssignment_1_2_2)
{ after(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getRightAssignment_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_Unary__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Unary__Group_1__0__Impl
	rule__Expression_Unary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Unary__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_UnaryAccess().getNotKeyword_1_0()); }

	'not' 

{ after(grammarAccess.getExpression_UnaryAccess().getNotKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Unary__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Unary__Group_1__1__Impl
	rule__Expression_Unary__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Unary__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_UnaryAccess().getExpression_NegateAction_1_1()); }
(

)
{ after(grammarAccess.getExpression_UnaryAccess().getExpression_NegateAction_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Unary__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Unary__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Unary__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_UnaryAccess().getExpAssignment_1_2()); }
(rule__Expression_Unary__ExpAssignment_1_2)
{ after(grammarAccess.getExpression_UnaryAccess().getExpAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_Unary__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Unary__Group_2__0__Impl
	rule__Expression_Unary__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Unary__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_UnaryAccess().getNumberSignKeyword_2_0()); }

	'#' 

{ after(grammarAccess.getExpression_UnaryAccess().getNumberSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Unary__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Unary__Group_2__1__Impl
	rule__Expression_Unary__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Unary__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_UnaryAccess().getExpression_LengthAction_2_1()); }
(

)
{ after(grammarAccess.getExpression_UnaryAccess().getExpression_LengthAction_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Unary__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Unary__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Unary__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_UnaryAccess().getExpAssignment_2_2()); }
(rule__Expression_Unary__ExpAssignment_2_2)
{ after(grammarAccess.getExpression_UnaryAccess().getExpAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_Unary__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Unary__Group_3__0__Impl
	rule__Expression_Unary__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Unary__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_UnaryAccess().getHyphenMinusKeyword_3_0()); }

	'-' 

{ after(grammarAccess.getExpression_UnaryAccess().getHyphenMinusKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Unary__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Unary__Group_3__1__Impl
	rule__Expression_Unary__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Unary__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_UnaryAccess().getExpression_InvertAction_3_1()); }
(

)
{ after(grammarAccess.getExpression_UnaryAccess().getExpression_InvertAction_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Unary__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Unary__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Unary__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_UnaryAccess().getExpAssignment_3_2()); }
(rule__Expression_Unary__ExpAssignment_3_2)
{ after(grammarAccess.getExpression_UnaryAccess().getExpAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_Exponentiation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Exponentiation__Group__0__Impl
	rule__Expression_Exponentiation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Exponentiation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_ExponentiationAccess().getExpression_TerminalParserRuleCall_0()); }
	ruleExpression_Terminal
{ after(grammarAccess.getExpression_ExponentiationAccess().getExpression_TerminalParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Exponentiation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Exponentiation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Exponentiation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_ExponentiationAccess().getGroup_1()); }
(rule__Expression_Exponentiation__Group_1__0)?
{ after(grammarAccess.getExpression_ExponentiationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_Exponentiation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Exponentiation__Group_1__0__Impl
	rule__Expression_Exponentiation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Exponentiation__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_ExponentiationAccess().getCircumflexAccentKeyword_1_0()); }

	'^' 

{ after(grammarAccess.getExpression_ExponentiationAccess().getCircumflexAccentKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Exponentiation__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Exponentiation__Group_1__1__Impl
	rule__Expression_Exponentiation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Exponentiation__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_ExponentiationAccess().getExpression_ExponentiationLeftAction_1_1()); }
(

)
{ after(grammarAccess.getExpression_ExponentiationAccess().getExpression_ExponentiationLeftAction_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Exponentiation__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Exponentiation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Exponentiation__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_ExponentiationAccess().getRightAssignment_1_2()); }
(rule__Expression_Exponentiation__RightAssignment_1_2)
{ after(grammarAccess.getExpression_ExponentiationAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_Nil__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Nil__Group__0__Impl
	rule__Expression_Nil__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Nil__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_NilAccess().getNilKeyword_0()); }

	'nil' 

{ after(grammarAccess.getExpression_NilAccess().getNilKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Nil__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Nil__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Nil__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_NilAccess().getExpression_NilAction_1()); }
(

)
{ after(grammarAccess.getExpression_NilAccess().getExpression_NilAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_True__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_True__Group__0__Impl
	rule__Expression_True__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_True__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_TrueAccess().getTrueKeyword_0()); }

	'true' 

{ after(grammarAccess.getExpression_TrueAccess().getTrueKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_True__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_True__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_True__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_TrueAccess().getExpression_TrueAction_1()); }
(

)
{ after(grammarAccess.getExpression_TrueAccess().getExpression_TrueAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_False__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_False__Group__0__Impl
	rule__Expression_False__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_False__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_FalseAccess().getFalseKeyword_0()); }

	'false' 

{ after(grammarAccess.getExpression_FalseAccess().getFalseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_False__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_False__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_False__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_FalseAccess().getExpression_FalseAction_1()); }
(

)
{ after(grammarAccess.getExpression_FalseAccess().getExpression_FalseAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_VarArgs__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_VarArgs__Group__0__Impl
	rule__Expression_VarArgs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_VarArgs__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_VarArgsAccess().getFullStopFullStopFullStopKeyword_0()); }

	'...' 

{ after(grammarAccess.getExpression_VarArgsAccess().getFullStopFullStopFullStopKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_VarArgs__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_VarArgs__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_VarArgs__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_VarArgsAccess().getExpression_VarArgsAction_1()); }
(

)
{ after(grammarAccess.getExpression_VarArgsAccess().getExpression_VarArgsAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_Function__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Function__Group__0__Impl
	rule__Expression_Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Function__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_FunctionAccess().getFunctionKeyword_0()); }

	'function' 

{ after(grammarAccess.getExpression_FunctionAccess().getFunctionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Function__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Function__Group__1__Impl
	rule__Expression_Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Function__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_FunctionAccess().getFunctionAssignment_1()); }
(rule__Expression_Function__FunctionAssignment_1)
{ after(grammarAccess.getExpression_FunctionAccess().getFunctionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Function__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Function__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Function__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_FunctionAccess().getEndKeyword_2()); }

	'end' 

{ after(grammarAccess.getExpression_FunctionAccess().getEndKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_TableConstructor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_TableConstructor__Group__0__Impl
	rule__Expression_TableConstructor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_TableConstructor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_TableConstructorAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getExpression_TableConstructorAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_TableConstructor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_TableConstructor__Group__1__Impl
	rule__Expression_TableConstructor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_TableConstructor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_TableConstructorAccess().getExpression_TableConstructorAction_1()); }
(

)
{ after(grammarAccess.getExpression_TableConstructorAccess().getExpression_TableConstructorAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_TableConstructor__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_TableConstructor__Group__2__Impl
	rule__Expression_TableConstructor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_TableConstructor__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_TableConstructorAccess().getGroup_2()); }
(rule__Expression_TableConstructor__Group_2__0)?
{ after(grammarAccess.getExpression_TableConstructorAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_TableConstructor__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_TableConstructor__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_TableConstructor__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_TableConstructorAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getExpression_TableConstructorAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Expression_TableConstructor__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_TableConstructor__Group_2__0__Impl
	rule__Expression_TableConstructor__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_TableConstructor__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_TableConstructorAccess().getFieldsAssignment_2_0()); }
(rule__Expression_TableConstructor__FieldsAssignment_2_0)
{ after(grammarAccess.getExpression_TableConstructorAccess().getFieldsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_TableConstructor__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_TableConstructor__Group_2__1__Impl
	rule__Expression_TableConstructor__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_TableConstructor__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_TableConstructorAccess().getGroup_2_1()); }
(rule__Expression_TableConstructor__Group_2_1__0)*
{ after(grammarAccess.getExpression_TableConstructorAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_TableConstructor__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_TableConstructor__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_TableConstructor__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_TableConstructorAccess().getAlternatives_2_2()); }
(rule__Expression_TableConstructor__Alternatives_2_2)?
{ after(grammarAccess.getExpression_TableConstructorAccess().getAlternatives_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_TableConstructor__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_TableConstructor__Group_2_1__0__Impl
	rule__Expression_TableConstructor__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_TableConstructor__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_TableConstructorAccess().getAlternatives_2_1_0()); }
(rule__Expression_TableConstructor__Alternatives_2_1_0)
{ after(grammarAccess.getExpression_TableConstructorAccess().getAlternatives_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_TableConstructor__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_TableConstructor__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_TableConstructor__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_TableConstructorAccess().getFieldsAssignment_2_1_1()); }
(rule__Expression_TableConstructor__FieldsAssignment_2_1_1)
{ after(grammarAccess.getExpression_TableConstructorAccess().getFieldsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_Functioncall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Functioncall__Group__0__Impl
	rule__Expression_Functioncall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Functioncall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_FunctioncallAccess().getExpression_AccessMemberOrArrayElementParserRuleCall_0()); }
	ruleExpression_AccessMemberOrArrayElement
{ after(grammarAccess.getExpression_FunctioncallAccess().getExpression_AccessMemberOrArrayElementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Functioncall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Functioncall__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Functioncall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_FunctioncallAccess().getAlternatives_1()); }
(rule__Expression_Functioncall__Alternatives_1)?
{ after(grammarAccess.getExpression_FunctioncallAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_Functioncall__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Functioncall__Group_1_0__0__Impl
	rule__Expression_Functioncall__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Functioncall__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_FunctioncallAccess().getColonKeyword_1_0_0()); }

	':' 

{ after(grammarAccess.getExpression_FunctioncallAccess().getColonKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Functioncall__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Functioncall__Group_1_0__1__Impl
	rule__Expression_Functioncall__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Functioncall__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_FunctioncallAccess().getExpression_CallMemberFunctionObjectAction_1_0_1()); }
(

)
{ after(grammarAccess.getExpression_FunctioncallAccess().getExpression_CallMemberFunctionObjectAction_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Functioncall__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Functioncall__Group_1_0__2__Impl
	rule__Expression_Functioncall__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Functioncall__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_FunctioncallAccess().getMemberFunctionNameAssignment_1_0_2()); }
(rule__Expression_Functioncall__MemberFunctionNameAssignment_1_0_2)
{ after(grammarAccess.getExpression_FunctioncallAccess().getMemberFunctionNameAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Functioncall__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Functioncall__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Functioncall__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_FunctioncallAccess().getArgumentsAssignment_1_0_3()); }
(rule__Expression_Functioncall__ArgumentsAssignment_1_0_3)
{ after(grammarAccess.getExpression_FunctioncallAccess().getArgumentsAssignment_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Expression_Functioncall__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Functioncall__Group_1_1__0__Impl
	rule__Expression_Functioncall__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Functioncall__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_FunctioncallAccess().getExpression_CallFunctionObjectAction_1_1_0()); }
(

)
{ after(grammarAccess.getExpression_FunctioncallAccess().getExpression_CallFunctionObjectAction_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Functioncall__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_Functioncall__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Functioncall__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_FunctioncallAccess().getArgumentsAssignment_1_1_1()); }
(rule__Expression_Functioncall__ArgumentsAssignment_1_1_1)
{ after(grammarAccess.getExpression_FunctioncallAccess().getArgumentsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_AccessMemberOrArrayElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_AccessMemberOrArrayElement__Group__0__Impl
	rule__Expression_AccessMemberOrArrayElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_AccessMemberOrArrayElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getExpression_VariableNameParserRuleCall_0()); }
	ruleExpression_VariableName
{ after(grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getExpression_VariableNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_AccessMemberOrArrayElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_AccessMemberOrArrayElement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_AccessMemberOrArrayElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getAlternatives_1()); }
(rule__Expression_AccessMemberOrArrayElement__Alternatives_1)*
{ after(grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_AccessMemberOrArrayElement__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_AccessMemberOrArrayElement__Group_1_0__0__Impl
	rule__Expression_AccessMemberOrArrayElement__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_AccessMemberOrArrayElement__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getLeftSquareBracketKeyword_1_0_0()); }

	'[' 

{ after(grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getLeftSquareBracketKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_AccessMemberOrArrayElement__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_AccessMemberOrArrayElement__Group_1_0__1__Impl
	rule__Expression_AccessMemberOrArrayElement__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_AccessMemberOrArrayElement__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getExpression_AccessArrayArrayAction_1_0_1()); }
(

)
{ after(grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getExpression_AccessArrayArrayAction_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_AccessMemberOrArrayElement__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_AccessMemberOrArrayElement__Group_1_0__2__Impl
	rule__Expression_AccessMemberOrArrayElement__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_AccessMemberOrArrayElement__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getIndexAssignment_1_0_2()); }
(rule__Expression_AccessMemberOrArrayElement__IndexAssignment_1_0_2)
{ after(grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getIndexAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_AccessMemberOrArrayElement__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_AccessMemberOrArrayElement__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_AccessMemberOrArrayElement__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getRightSquareBracketKeyword_1_0_3()); }

	']' 

{ after(grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getRightSquareBracketKeyword_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Expression_AccessMemberOrArrayElement__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_AccessMemberOrArrayElement__Group_1_1__0__Impl
	rule__Expression_AccessMemberOrArrayElement__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_AccessMemberOrArrayElement__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getFullStopKeyword_1_1_0()); }

	'.' 

{ after(grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getFullStopKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_AccessMemberOrArrayElement__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_AccessMemberOrArrayElement__Group_1_1__1__Impl
	rule__Expression_AccessMemberOrArrayElement__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_AccessMemberOrArrayElement__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getExpression_AccessMemberObjectAction_1_1_1()); }
(

)
{ after(grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getExpression_AccessMemberObjectAction_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_AccessMemberOrArrayElement__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_AccessMemberOrArrayElement__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_AccessMemberOrArrayElement__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getMemberNameAssignment_1_1_2()); }
(rule__Expression_AccessMemberOrArrayElement__MemberNameAssignment_1_1_2)
{ after(grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getMemberNameAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_VariableName__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_VariableName__Group_0__0__Impl
	rule__Expression_VariableName__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_VariableName__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_VariableNameAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getExpression_VariableNameAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_VariableName__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_VariableName__Group_0__1__Impl
	rule__Expression_VariableName__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_VariableName__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_VariableNameAccess().getExpressionParserRuleCall_0_1()); }
	ruleExpression
{ after(grammarAccess.getExpression_VariableNameAccess().getExpressionParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_VariableName__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_VariableName__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_VariableName__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_VariableNameAccess().getRightParenthesisKeyword_0_2()); }

	')' 

{ after(grammarAccess.getExpression_VariableNameAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_VariableName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_VariableName__Group_1__0__Impl
	rule__Expression_VariableName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_VariableName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_VariableNameAccess().getExpression_VariableNameAction_1_0()); }
(

)
{ after(grammarAccess.getExpression_VariableNameAccess().getExpression_VariableNameAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_VariableName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_VariableName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_VariableName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_VariableNameAccess().getVariableAssignment_1_1()); }
(rule__Expression_VariableName__VariableAssignment_1_1)
{ after(grammarAccess.getExpression_VariableNameAccess().getVariableAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getGroup_1()); }
(rule__Function__Group_1__0)?
{ after(grammarAccess.getFunctionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getVarArgsAssignment_2()); }
(rule__Function__VarArgsAssignment_2)?
{ after(grammarAccess.getFunctionAccess().getVarArgsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__3__Impl
	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getBodyAssignment_4()); }
(rule__Function__BodyAssignment_4)
{ after(grammarAccess.getFunctionAccess().getBodyAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Function__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_1__0__Impl
	rule__Function__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getParametersAssignment_1_0()); }
(rule__Function__ParametersAssignment_1_0)
{ after(grammarAccess.getFunctionAccess().getParametersAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_1__1__Impl
	rule__Function__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getGroup_1_1()); }
(rule__Function__Group_1_1__0)*
{ after(grammarAccess.getFunctionAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getCommaKeyword_1_2()); }
(
	',' 
)?
{ after(grammarAccess.getFunctionAccess().getCommaKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Function__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_1_1__0__Impl
	rule__Function__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getCommaKeyword_1_1_0()); }

	',' 

{ after(grammarAccess.getFunctionAccess().getCommaKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getParametersAssignment_1_1_1()); }
(rule__Function__ParametersAssignment_1_1_1)
{ after(grammarAccess.getFunctionAccess().getParametersAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Functioncall_Arguments__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Functioncall_Arguments__Group__0__Impl
	rule__Functioncall_Arguments__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Functioncall_Arguments__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctioncall_ArgumentsAccess().getFunctioncall_ArgumentsAction_0()); }
(

)
{ after(grammarAccess.getFunctioncall_ArgumentsAccess().getFunctioncall_ArgumentsAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Functioncall_Arguments__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Functioncall_Arguments__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Functioncall_Arguments__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctioncall_ArgumentsAccess().getAlternatives_1()); }
(rule__Functioncall_Arguments__Alternatives_1)
{ after(grammarAccess.getFunctioncall_ArgumentsAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Functioncall_Arguments__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Functioncall_Arguments__Group_1_0__0__Impl
	rule__Functioncall_Arguments__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Functioncall_Arguments__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctioncall_ArgumentsAccess().getLeftParenthesisKeyword_1_0_0()); }

	'(' 

{ after(grammarAccess.getFunctioncall_ArgumentsAccess().getLeftParenthesisKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Functioncall_Arguments__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Functioncall_Arguments__Group_1_0__1__Impl
	rule__Functioncall_Arguments__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Functioncall_Arguments__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctioncall_ArgumentsAccess().getGroup_1_0_1()); }
(rule__Functioncall_Arguments__Group_1_0_1__0)?
{ after(grammarAccess.getFunctioncall_ArgumentsAccess().getGroup_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Functioncall_Arguments__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Functioncall_Arguments__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Functioncall_Arguments__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctioncall_ArgumentsAccess().getRightParenthesisKeyword_1_0_2()); }

	')' 

{ after(grammarAccess.getFunctioncall_ArgumentsAccess().getRightParenthesisKeyword_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Functioncall_Arguments__Group_1_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Functioncall_Arguments__Group_1_0_1__0__Impl
	rule__Functioncall_Arguments__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Functioncall_Arguments__Group_1_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctioncall_ArgumentsAccess().getArgumentsAssignment_1_0_1_0()); }
(rule__Functioncall_Arguments__ArgumentsAssignment_1_0_1_0)
{ after(grammarAccess.getFunctioncall_ArgumentsAccess().getArgumentsAssignment_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Functioncall_Arguments__Group_1_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Functioncall_Arguments__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Functioncall_Arguments__Group_1_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctioncall_ArgumentsAccess().getGroup_1_0_1_1()); }
(rule__Functioncall_Arguments__Group_1_0_1_1__0)*
{ after(grammarAccess.getFunctioncall_ArgumentsAccess().getGroup_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Functioncall_Arguments__Group_1_0_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Functioncall_Arguments__Group_1_0_1_1__0__Impl
	rule__Functioncall_Arguments__Group_1_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Functioncall_Arguments__Group_1_0_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctioncall_ArgumentsAccess().getCommaKeyword_1_0_1_1_0()); }

	',' 

{ after(grammarAccess.getFunctioncall_ArgumentsAccess().getCommaKeyword_1_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Functioncall_Arguments__Group_1_0_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Functioncall_Arguments__Group_1_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Functioncall_Arguments__Group_1_0_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctioncall_ArgumentsAccess().getArgumentsAssignment_1_0_1_1_1()); }
(rule__Functioncall_Arguments__ArgumentsAssignment_1_0_1_1_1)
{ after(grammarAccess.getFunctioncall_ArgumentsAccess().getArgumentsAssignment_1_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Field_AddEntryToTable_Brackets__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field_AddEntryToTable_Brackets__Group__0__Impl
	rule__Field_AddEntryToTable_Brackets__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_AddEntryToTable_Brackets__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_AddEntryToTable_BracketsAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getField_AddEntryToTable_BracketsAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field_AddEntryToTable_Brackets__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field_AddEntryToTable_Brackets__Group__1__Impl
	rule__Field_AddEntryToTable_Brackets__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_AddEntryToTable_Brackets__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_AddEntryToTable_BracketsAccess().getIndexExpressionAssignment_1()); }
(rule__Field_AddEntryToTable_Brackets__IndexExpressionAssignment_1)
{ after(grammarAccess.getField_AddEntryToTable_BracketsAccess().getIndexExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field_AddEntryToTable_Brackets__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field_AddEntryToTable_Brackets__Group__2__Impl
	rule__Field_AddEntryToTable_Brackets__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_AddEntryToTable_Brackets__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_AddEntryToTable_BracketsAccess().getRightSquareBracketKeyword_2()); }

	']' 

{ after(grammarAccess.getField_AddEntryToTable_BracketsAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field_AddEntryToTable_Brackets__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field_AddEntryToTable_Brackets__Group__3__Impl
	rule__Field_AddEntryToTable_Brackets__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_AddEntryToTable_Brackets__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_AddEntryToTable_BracketsAccess().getEqualsSignKeyword_3()); }

	'=' 

{ after(grammarAccess.getField_AddEntryToTable_BracketsAccess().getEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field_AddEntryToTable_Brackets__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field_AddEntryToTable_Brackets__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_AddEntryToTable_Brackets__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_AddEntryToTable_BracketsAccess().getValueAssignment_4()); }
(rule__Field_AddEntryToTable_Brackets__ValueAssignment_4)
{ after(grammarAccess.getField_AddEntryToTable_BracketsAccess().getValueAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Field_AddEntryToTable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field_AddEntryToTable__Group__0__Impl
	rule__Field_AddEntryToTable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_AddEntryToTable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_AddEntryToTableAccess().getKeyAssignment_0()); }
(rule__Field_AddEntryToTable__KeyAssignment_0)
{ after(grammarAccess.getField_AddEntryToTableAccess().getKeyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field_AddEntryToTable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field_AddEntryToTable__Group__1__Impl
	rule__Field_AddEntryToTable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_AddEntryToTable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_AddEntryToTableAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getField_AddEntryToTableAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field_AddEntryToTable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field_AddEntryToTable__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_AddEntryToTable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_AddEntryToTableAccess().getValueAssignment_2()); }
(rule__Field_AddEntryToTable__ValueAssignment_2)
{ after(grammarAccess.getField_AddEntryToTableAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Block__StatementsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatementsStatementParserRuleCall_1_0_0()); }
	ruleStatement{ after(grammarAccess.getBlockAccess().getStatementsStatementParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block__ReturnValueAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getReturnValueLastStatementParserRuleCall_2_0_0()); }
	ruleLastStatement{ after(grammarAccess.getBlockAccess().getReturnValueLastStatementParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LastStatement_Return__ReturnValuesAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLastStatement_ReturnAccess().getReturnValuesExpressionParserRuleCall_2_0_0()); }
	ruleExpression{ after(grammarAccess.getLastStatement_ReturnAccess().getReturnValuesExpressionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LastStatement_Return__ReturnValuesAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLastStatement_ReturnAccess().getReturnValuesExpressionParserRuleCall_2_1_1_0()); }
	ruleExpression{ after(grammarAccess.getLastStatement_ReturnAccess().getReturnValuesExpressionParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_Block__BlockAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_BlockAccess().getBlockBlockParserRuleCall_1_0()); }
	ruleBlock{ after(grammarAccess.getStatement_BlockAccess().getBlockBlockParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_While__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_WhileAccess().getExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getStatement_WhileAccess().getExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_While__BlockAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_WhileAccess().getBlockBlockParserRuleCall_3_0()); }
	ruleBlock{ after(grammarAccess.getStatement_WhileAccess().getBlockBlockParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_Repeat__BlockAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_RepeatAccess().getBlockBlockParserRuleCall_1_0()); }
	ruleBlock{ after(grammarAccess.getStatement_RepeatAccess().getBlockBlockParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_Repeat__ExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_RepeatAccess().getExpressionExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getStatement_RepeatAccess().getExpressionExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_If_Then_Else__IfExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_If_Then_ElseAccess().getIfExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getStatement_If_Then_ElseAccess().getIfExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_If_Then_Else__IfBlockAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_If_Then_ElseAccess().getIfBlockBlockParserRuleCall_3_0()); }
	ruleBlock{ after(grammarAccess.getStatement_If_Then_ElseAccess().getIfBlockBlockParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_If_Then_Else__ElseIfAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_If_Then_ElseAccess().getElseIfStatement_If_Then_Else_ElseIfPartParserRuleCall_4_0()); }
	ruleStatement_If_Then_Else_ElseIfPart{ after(grammarAccess.getStatement_If_Then_ElseAccess().getElseIfStatement_If_Then_Else_ElseIfPartParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_If_Then_Else__ElseBlockAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_If_Then_ElseAccess().getElseBlockBlockParserRuleCall_5_1_0()); }
	ruleBlock{ after(grammarAccess.getStatement_If_Then_ElseAccess().getElseBlockBlockParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_If_Then_Else_ElseIfPart__ElseifExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_If_Then_Else_ElseIfPartAccess().getElseifExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getStatement_If_Then_Else_ElseIfPartAccess().getElseifExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_If_Then_Else_ElseIfPart__ElseifBlockAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_If_Then_Else_ElseIfPartAccess().getElseifBlockBlockParserRuleCall_3_0()); }
	ruleBlock{ after(grammarAccess.getStatement_If_Then_Else_ElseIfPartAccess().getElseifBlockBlockParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Numeric__IteratorNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_NumericAccess().getIteratorNameLUA_NAMETerminalRuleCall_1_0()); }
	RULE_LUA_NAME{ after(grammarAccess.getStatement_For_NumericAccess().getIteratorNameLUA_NAMETerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Numeric__StartExprAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_NumericAccess().getStartExprExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getStatement_For_NumericAccess().getStartExprExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Numeric__UntilExprAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_NumericAccess().getUntilExprExpressionParserRuleCall_5_0()); }
	ruleExpression{ after(grammarAccess.getStatement_For_NumericAccess().getUntilExprExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Numeric__StepExprAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_NumericAccess().getStepExprExpressionParserRuleCall_6_1_0()); }
	ruleExpression{ after(grammarAccess.getStatement_For_NumericAccess().getStepExprExpressionParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Numeric__BlockAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_NumericAccess().getBlockBlockParserRuleCall_8_0()); }
	ruleBlock{ after(grammarAccess.getStatement_For_NumericAccess().getBlockBlockParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Generic__NamesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_GenericAccess().getNamesLUA_NAMETerminalRuleCall_1_0()); }
	RULE_LUA_NAME{ after(grammarAccess.getStatement_For_GenericAccess().getNamesLUA_NAMETerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Generic__NamesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_GenericAccess().getNamesLUA_NAMETerminalRuleCall_2_1_0()); }
	RULE_LUA_NAME{ after(grammarAccess.getStatement_For_GenericAccess().getNamesLUA_NAMETerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Generic__ExpressionsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_GenericAccess().getExpressionsExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getStatement_For_GenericAccess().getExpressionsExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Generic__ExpressionsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_GenericAccess().getExpressionsExpressionParserRuleCall_5_1_0()); }
	ruleExpression{ after(grammarAccess.getStatement_For_GenericAccess().getExpressionsExpressionParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_For_Generic__BlockAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_For_GenericAccess().getBlockBlockParserRuleCall_7_0()); }
	ruleBlock{ after(grammarAccess.getStatement_For_GenericAccess().getBlockBlockParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_GlobalFunction_Declaration__PrefixAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getPrefixLUA_NAMETerminalRuleCall_1_0()); }
	RULE_LUA_NAME{ after(grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getPrefixLUA_NAMETerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_GlobalFunction_Declaration__PrefixAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getPrefixLUA_NAMETerminalRuleCall_2_1_0()); }
	RULE_LUA_NAME{ after(grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getPrefixLUA_NAMETerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_GlobalFunction_Declaration__FunctionNameAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getFunctionNameLUA_NAMETerminalRuleCall_3_1_0()); }
	RULE_LUA_NAME{ after(grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getFunctionNameLUA_NAMETerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_GlobalFunction_Declaration__FunctionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getFunctionFunctionParserRuleCall_4_0()); }
	ruleFunction{ after(grammarAccess.getStatement_GlobalFunction_DeclarationAccess().getFunctionFunctionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_LocalFunction_Declaration__FunctionNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_LocalFunction_DeclarationAccess().getFunctionNameLUA_NAMETerminalRuleCall_2_0()); }
	RULE_LUA_NAME{ after(grammarAccess.getStatement_LocalFunction_DeclarationAccess().getFunctionNameLUA_NAMETerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_LocalFunction_Declaration__FunctionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_LocalFunction_DeclarationAccess().getFunctionFunctionParserRuleCall_3_0()); }
	ruleFunction{ after(grammarAccess.getStatement_LocalFunction_DeclarationAccess().getFunctionFunctionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_Local_Variable_Declaration__VariableNamesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_Local_Variable_DeclarationAccess().getVariableNamesLUA_NAMETerminalRuleCall_1_0()); }
	RULE_LUA_NAME{ after(grammarAccess.getStatement_Local_Variable_DeclarationAccess().getVariableNamesLUA_NAMETerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_Local_Variable_Declaration__VariableNamesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_Local_Variable_DeclarationAccess().getVariableNamesLUA_NAMETerminalRuleCall_2_1_0()); }
	RULE_LUA_NAME{ after(grammarAccess.getStatement_Local_Variable_DeclarationAccess().getVariableNamesLUA_NAMETerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_Local_Variable_Declaration__InitialValueAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_Local_Variable_DeclarationAccess().getInitialValueExpressionParserRuleCall_3_1_0()); }
	ruleExpression{ after(grammarAccess.getStatement_Local_Variable_DeclarationAccess().getInitialValueExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_Local_Variable_Declaration__InitialValueAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_Local_Variable_DeclarationAccess().getInitialValueExpressionParserRuleCall_3_2_1_0()); }
	ruleExpression{ after(grammarAccess.getStatement_Local_Variable_DeclarationAccess().getInitialValueExpressionParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_FunctioncallOrAssignment__VariableAssignment_1_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getVariableExpression_AccessMemberOrArrayElementParserRuleCall_1_0_1_1_0()); }
	ruleExpression_AccessMemberOrArrayElement{ after(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getVariableExpression_AccessMemberOrArrayElementParserRuleCall_1_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_FunctioncallOrAssignment__ValuesAssignment_1_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getValuesExpressionParserRuleCall_1_0_3_0()); }
	ruleExpression{ after(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getValuesExpressionParserRuleCall_1_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_FunctioncallOrAssignment__ValuesAssignment_1_0_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getValuesExpressionParserRuleCall_1_0_4_1_0()); }
	ruleExpression{ after(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getValuesExpressionParserRuleCall_1_0_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_FunctioncallOrAssignment__MemberFunctionNameAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getMemberFunctionNameLUA_NAMETerminalRuleCall_1_1_2_0()); }
	RULE_LUA_NAME{ after(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getMemberFunctionNameLUA_NAMETerminalRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_FunctioncallOrAssignment__ArgumentsAssignment_1_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getArgumentsFunctioncall_ArgumentsParserRuleCall_1_1_3_0()); }
	ruleFunctioncall_Arguments{ after(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getArgumentsFunctioncall_ArgumentsParserRuleCall_1_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_FunctioncallOrAssignment__ArgumentsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getArgumentsFunctioncall_ArgumentsParserRuleCall_1_2_1_0()); }
	ruleFunctioncall_Arguments{ after(grammarAccess.getStatement_FunctioncallOrAssignmentAccess().getArgumentsFunctioncall_ArgumentsParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Or__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_OrAccess().getRightExpression_AndParserRuleCall_1_2_0()); }
	ruleExpression_And{ after(grammarAccess.getExpression_OrAccess().getRightExpression_AndParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_And__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_AndAccess().getRightExpression_CompareParserRuleCall_1_2_0()); }
	ruleExpression_Compare{ after(grammarAccess.getExpression_AndAccess().getRightExpression_CompareParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Compare__RightAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_CompareAccess().getRightExpression_ConcatenationParserRuleCall_1_0_2_0()); }
	ruleExpression_Concatenation{ after(grammarAccess.getExpression_CompareAccess().getRightExpression_ConcatenationParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Compare__RightAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_CompareAccess().getRightExpression_ConcatenationParserRuleCall_1_1_2_0()); }
	ruleExpression_Concatenation{ after(grammarAccess.getExpression_CompareAccess().getRightExpression_ConcatenationParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Compare__RightAssignment_1_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_CompareAccess().getRightExpression_ConcatenationParserRuleCall_1_2_2_0()); }
	ruleExpression_Concatenation{ after(grammarAccess.getExpression_CompareAccess().getRightExpression_ConcatenationParserRuleCall_1_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Compare__RightAssignment_1_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_CompareAccess().getRightExpression_ConcatenationParserRuleCall_1_3_2_0()); }
	ruleExpression_Concatenation{ after(grammarAccess.getExpression_CompareAccess().getRightExpression_ConcatenationParserRuleCall_1_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Compare__RightAssignment_1_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_CompareAccess().getRightExpression_ConcatenationParserRuleCall_1_4_2_0()); }
	ruleExpression_Concatenation{ after(grammarAccess.getExpression_CompareAccess().getRightExpression_ConcatenationParserRuleCall_1_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Compare__RightAssignment_1_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_CompareAccess().getRightExpression_ConcatenationParserRuleCall_1_5_2_0()); }
	ruleExpression_Concatenation{ after(grammarAccess.getExpression_CompareAccess().getRightExpression_ConcatenationParserRuleCall_1_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Concatenation__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_ConcatenationAccess().getRightExpression_ConcatenationParserRuleCall_1_2_0()); }
	ruleExpression_Concatenation{ after(grammarAccess.getExpression_ConcatenationAccess().getRightExpression_ConcatenationParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_PlusMinus__RightAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_PlusMinusAccess().getRightExpression_MultiplicationDivisionModuloParserRuleCall_1_0_2_0()); }
	ruleExpression_MultiplicationDivisionModulo{ after(grammarAccess.getExpression_PlusMinusAccess().getRightExpression_MultiplicationDivisionModuloParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_PlusMinus__RightAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_PlusMinusAccess().getRightExpression_MultiplicationDivisionModuloParserRuleCall_1_1_2_0()); }
	ruleExpression_MultiplicationDivisionModulo{ after(grammarAccess.getExpression_PlusMinusAccess().getRightExpression_MultiplicationDivisionModuloParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_MultiplicationDivisionModulo__RightAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getRightExpression_UnaryParserRuleCall_1_0_2_0()); }
	ruleExpression_Unary{ after(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getRightExpression_UnaryParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_MultiplicationDivisionModulo__RightAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getRightExpression_UnaryParserRuleCall_1_1_2_0()); }
	ruleExpression_Unary{ after(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getRightExpression_UnaryParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_MultiplicationDivisionModulo__RightAssignment_1_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getRightExpression_UnaryParserRuleCall_1_2_2_0()); }
	ruleExpression_Unary{ after(grammarAccess.getExpression_MultiplicationDivisionModuloAccess().getRightExpression_UnaryParserRuleCall_1_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Unary__ExpAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_UnaryAccess().getExpExpression_UnaryParserRuleCall_1_2_0()); }
	ruleExpression_Unary{ after(grammarAccess.getExpression_UnaryAccess().getExpExpression_UnaryParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Unary__ExpAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_UnaryAccess().getExpExpression_UnaryParserRuleCall_2_2_0()); }
	ruleExpression_Unary{ after(grammarAccess.getExpression_UnaryAccess().getExpExpression_UnaryParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Unary__ExpAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_UnaryAccess().getExpExpression_UnaryParserRuleCall_3_2_0()); }
	ruleExpression_Unary{ after(grammarAccess.getExpression_UnaryAccess().getExpExpression_UnaryParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Exponentiation__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_ExponentiationAccess().getRightExpression_ExponentiationParserRuleCall_1_2_0()); }
	ruleExpression_Exponentiation{ after(grammarAccess.getExpression_ExponentiationAccess().getRightExpression_ExponentiationParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Number__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_NumberAccess().getValueLUA_NUMBERTerminalRuleCall_0()); }
	RULE_LUA_NUMBER{ after(grammarAccess.getExpression_NumberAccess().getValueLUA_NUMBERTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_String__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_StringAccess().getValueLUA_STRINGTerminalRuleCall_0()); }
	RULE_LUA_STRING{ after(grammarAccess.getExpression_StringAccess().getValueLUA_STRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Function__FunctionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_FunctionAccess().getFunctionFunctionParserRuleCall_1_0()); }
	ruleFunction{ after(grammarAccess.getExpression_FunctionAccess().getFunctionFunctionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_TableConstructor__FieldsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_TableConstructorAccess().getFieldsFieldParserRuleCall_2_0_0()); }
	ruleField{ after(grammarAccess.getExpression_TableConstructorAccess().getFieldsFieldParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_TableConstructor__FieldsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_TableConstructorAccess().getFieldsFieldParserRuleCall_2_1_1_0()); }
	ruleField{ after(grammarAccess.getExpression_TableConstructorAccess().getFieldsFieldParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Functioncall__MemberFunctionNameAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_FunctioncallAccess().getMemberFunctionNameLUA_NAMETerminalRuleCall_1_0_2_0()); }
	RULE_LUA_NAME{ after(grammarAccess.getExpression_FunctioncallAccess().getMemberFunctionNameLUA_NAMETerminalRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Functioncall__ArgumentsAssignment_1_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_FunctioncallAccess().getArgumentsFunctioncall_ArgumentsParserRuleCall_1_0_3_0()); }
	ruleFunctioncall_Arguments{ after(grammarAccess.getExpression_FunctioncallAccess().getArgumentsFunctioncall_ArgumentsParserRuleCall_1_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Functioncall__ArgumentsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_FunctioncallAccess().getArgumentsFunctioncall_ArgumentsParserRuleCall_1_1_1_0()); }
	ruleFunctioncall_Arguments{ after(grammarAccess.getExpression_FunctioncallAccess().getArgumentsFunctioncall_ArgumentsParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_AccessMemberOrArrayElement__IndexAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getIndexExpressionParserRuleCall_1_0_2_0()); }
	ruleExpression{ after(grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getIndexExpressionParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_AccessMemberOrArrayElement__MemberNameAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getMemberNameLUA_NAMETerminalRuleCall_1_1_2_0()); }
	RULE_LUA_NAME{ after(grammarAccess.getExpression_AccessMemberOrArrayElementAccess().getMemberNameLUA_NAMETerminalRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_VariableName__VariableAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_VariableNameAccess().getVariableLUA_NAMETerminalRuleCall_1_1_0()); }
	RULE_LUA_NAME{ after(grammarAccess.getExpression_VariableNameAccess().getVariableLUA_NAMETerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ParametersAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getParametersLUA_NAMETerminalRuleCall_1_0_0()); }
	RULE_LUA_NAME{ after(grammarAccess.getFunctionAccess().getParametersLUA_NAMETerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ParametersAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getParametersLUA_NAMETerminalRuleCall_1_1_1_0()); }
	RULE_LUA_NAME{ after(grammarAccess.getFunctionAccess().getParametersLUA_NAMETerminalRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__VarArgsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_0()); }
(
{ before(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_0()); }

	'...' 

{ after(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_0()); }
)

{ after(grammarAccess.getFunctionAccess().getVarArgsFullStopFullStopFullStopKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__BodyAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getBodyBlockParserRuleCall_4_0()); }
	ruleBlock{ after(grammarAccess.getFunctionAccess().getBodyBlockParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Functioncall_Arguments__ArgumentsAssignment_1_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctioncall_ArgumentsAccess().getArgumentsExpressionParserRuleCall_1_0_1_0_0()); }
	ruleExpression{ after(grammarAccess.getFunctioncall_ArgumentsAccess().getArgumentsExpressionParserRuleCall_1_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Functioncall_Arguments__ArgumentsAssignment_1_0_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctioncall_ArgumentsAccess().getArgumentsExpressionParserRuleCall_1_0_1_1_1_0()); }
	ruleExpression{ after(grammarAccess.getFunctioncall_ArgumentsAccess().getArgumentsExpressionParserRuleCall_1_0_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Functioncall_Arguments__ArgumentsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctioncall_ArgumentsAccess().getArgumentsExpression_TableConstructorParserRuleCall_1_1_0()); }
	ruleExpression_TableConstructor{ after(grammarAccess.getFunctioncall_ArgumentsAccess().getArgumentsExpression_TableConstructorParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Functioncall_Arguments__ArgumentsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctioncall_ArgumentsAccess().getArgumentsExpression_StringParserRuleCall_1_2_0()); }
	ruleExpression_String{ after(grammarAccess.getFunctioncall_ArgumentsAccess().getArgumentsExpression_StringParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field_AddEntryToTable_Brackets__IndexExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_AddEntryToTable_BracketsAccess().getIndexExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getField_AddEntryToTable_BracketsAccess().getIndexExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field_AddEntryToTable_Brackets__ValueAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_AddEntryToTable_BracketsAccess().getValueExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getField_AddEntryToTable_BracketsAccess().getValueExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field_AddEntryToTable__KeyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_AddEntryToTableAccess().getKeyLUA_NAMETerminalRuleCall_0_0()); }
	RULE_LUA_NAME{ after(grammarAccess.getField_AddEntryToTableAccess().getKeyLUA_NAMETerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field_AddEntryToTable__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_AddEntryToTableAccess().getValueExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getField_AddEntryToTableAccess().getValueExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field_AppendEntryToTable__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_AppendEntryToTableAccess().getValueExpressionParserRuleCall_0()); }
	ruleExpression{ after(grammarAccess.getField_AppendEntryToTableAccess().getValueExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_COMMENT : '--' ('[[' ( options {greedy=false;} : . )*']]'|~('[') ~('\n')* '\n'?);

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_LUA_NAME : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_LUA_STRING : ('\'' ('\\' ('a'|'b'|'f'|'n'|'r'|'t'|'v'|'"'|'\''|'\\'|'0'..'9' '0'..'9' '0'..'9')|~(('\\'|'\'')))* '\''|'"' ('\\' ('a'|'b'|'f'|'n'|'r'|'t'|'v'|'"'|'\''|'\\'|'0'..'9' '0'..'9' '0'..'9')|~(('\\'|'"')))* '"'|'[[' ( options {greedy=false;} : . )*']]');

RULE_LUA_NUMBER : (('0'..'9')+ ('.' ('0'..'9')+ (('E'|'e') '-'? ('0'..'9')+)?)?|'0x' ('0'..'9'|'a'..'f')+);

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ANY_OTHER : .;


