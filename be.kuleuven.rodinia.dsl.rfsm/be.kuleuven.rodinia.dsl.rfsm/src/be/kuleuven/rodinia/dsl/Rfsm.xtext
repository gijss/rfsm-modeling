grammar be.kuleuven.rodinia.dsl.Rfsm with org.eclipse.xtext.common.Terminals

import "be.kuleuven.rodinia.model.rfsm"

//this grammar is only for testing purposes!!

//todo: 
//define graph setup
//create initial connector transition
//remove connectors, but do create junctions

HyperGraph returns HyperGraph:
	'Graph' name=ID
	'{'
		hyperVertices+=State	//can have only one root state
		//(hyperEdges += Connector)*
		(hyperEdges += Transition)*	
	'}'
;

State returns State:
	'state' name=ID
	'{'
		(subHyperVertices += State)*
		
		('entry:' entry=Function)?
		('doo:' doo=Function)?
		('exit:' exit=Function)?
	'}'
;

Connector returns Connector:
	'connector' name=ID 
	'{'
	'}'
;

Transition returns Transition:
	'transition' 'from' source+=[State|QualifiedName] 'to' target+=[State|QualifiedName]
	(events += Event)*
	('guard:' guard=Function)?
	('effect:' effect=Function)?
	('priority' priority_number=INT)?
;

Event returns Event:
	'onevent' eventliteral=STRING
;

Function returns Function:
	sourcecode=STRING
;

QualifiedName:
ID ('.' ID)*
;