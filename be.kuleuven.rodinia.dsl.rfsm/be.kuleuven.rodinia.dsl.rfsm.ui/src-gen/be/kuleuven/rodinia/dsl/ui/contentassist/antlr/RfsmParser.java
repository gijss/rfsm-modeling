/*
* generated by Xtext
*/
package be.kuleuven.rodinia.dsl.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import be.kuleuven.rodinia.dsl.services.RfsmGrammarAccess;

public class RfsmParser extends AbstractContentAssistParser {
	
	@Inject
	private RfsmGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected be.kuleuven.rodinia.dsl.ui.contentassist.antlr.internal.InternalRfsmParser createParser() {
		be.kuleuven.rodinia.dsl.ui.contentassist.antlr.internal.InternalRfsmParser result = new be.kuleuven.rodinia.dsl.ui.contentassist.antlr.internal.InternalRfsmParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getStateAccess().getGroup(), "rule__State__Group__0");
					put(grammarAccess.getStateAccess().getGroup_6(), "rule__State__Group_6__0");
					put(grammarAccess.getStateAccess().getGroup_7(), "rule__State__Group_7__0");
					put(grammarAccess.getStateAccess().getGroup_8(), "rule__State__Group_8__0");
					put(grammarAccess.getConnectorAccess().getGroup(), "rule__Connector__Group__0");
					put(grammarAccess.getTransitionAccess().getGroup(), "rule__Transition__Group__0");
					put(grammarAccess.getTransitionAccess().getGroup_6(), "rule__Transition__Group_6__0");
					put(grammarAccess.getTransitionAccess().getGroup_7(), "rule__Transition__Group_7__0");
					put(grammarAccess.getTransitionAccess().getGroup_8(), "rule__Transition__Group_8__0");
					put(grammarAccess.getEventAccess().getGroup(), "rule__Event__Group__0");
					put(grammarAccess.getStateAccess().getNameAssignment_1(), "rule__State__NameAssignment_1");
					put(grammarAccess.getStateAccess().getSubnodesAssignment_3(), "rule__State__SubnodesAssignment_3");
					put(grammarAccess.getStateAccess().getSubnodesAssignment_4(), "rule__State__SubnodesAssignment_4");
					put(grammarAccess.getStateAccess().getTransitionsAssignment_5(), "rule__State__TransitionsAssignment_5");
					put(grammarAccess.getStateAccess().getEntryAssignment_6_1(), "rule__State__EntryAssignment_6_1");
					put(grammarAccess.getStateAccess().getDooAssignment_7_1(), "rule__State__DooAssignment_7_1");
					put(grammarAccess.getStateAccess().getExitAssignment_8_1(), "rule__State__ExitAssignment_8_1");
					put(grammarAccess.getConnectorAccess().getNameAssignment_1(), "rule__Connector__NameAssignment_1");
					put(grammarAccess.getTransitionAccess().getSourceAssignment_2(), "rule__Transition__SourceAssignment_2");
					put(grammarAccess.getTransitionAccess().getTargetAssignment_4(), "rule__Transition__TargetAssignment_4");
					put(grammarAccess.getTransitionAccess().getEventsAssignment_5(), "rule__Transition__EventsAssignment_5");
					put(grammarAccess.getTransitionAccess().getGuardAssignment_6_1(), "rule__Transition__GuardAssignment_6_1");
					put(grammarAccess.getTransitionAccess().getEffectAssignment_7_1(), "rule__Transition__EffectAssignment_7_1");
					put(grammarAccess.getTransitionAccess().getPriority_numberAssignment_8_1(), "rule__Transition__Priority_numberAssignment_8_1");
					put(grammarAccess.getEventAccess().getEventliteralAssignment_1(), "rule__Event__EventliteralAssignment_1");
					put(grammarAccess.getFunctionAccess().getSourcecodeAssignment(), "rule__Function__SourcecodeAssignment");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			be.kuleuven.rodinia.dsl.ui.contentassist.antlr.internal.InternalRfsmParser typedParser = (be.kuleuven.rodinia.dsl.ui.contentassist.antlr.internal.InternalRfsmParser) parser;
			typedParser.entryRuleState();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public RfsmGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(RfsmGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
